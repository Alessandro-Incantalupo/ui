---
import { getEntry } from 'astro:content'
import {
  Button,
  Deck,
  Group,
  Heading,
  Label,
  Layout,
  Link,
  List,
  ListItem,
  Main,
  Paragraph,
  Section,
} from 'fulldev-ui'

import ComponentCard from '../components/ComponentCard.astro'
import Cta from '../components/Cta.astro'
import Footer from '../components/Footer.astro'
import Header from '../components/Header.astro'

const { data, render } = await getEntry('pages', 'components')
const { Content } = await render()

const baseMdx = await Astro.glob('../content/docs/base/*.mdx')
console.log('mdx', baseMdx)

const typographyMdx = await Astro.glob('../content/docs/typography/*.mdx')
console.log('mdx', typographyMdx)
---

<Layout
  title="Fulldev UI - Astro UI component library, open-source"
  description="A library of UI components, written in Astro, compatible with all frameworks. Unique features to build entire websites, check it out."
  image="https://ui.full.dev/og-image-fulldev-ui.png"
  body={{
    class: 'not-content',
    theme: 'dark',
  }}
>
  <Header />
  <Main class="components_page">
    <Section
      class="hero-section"
      size="lg"
    >
      <Heading
        size="xl"
        as="h1"
        text={data.hero.heading}
      />
      <Paragraph text={data.hero.paragraph} />
    </Section>

    <Section>
      <Heading>Base components</Heading>
      <Deck>
        {
          baseMdx
            .filter(
              (item) => item.frontmatter.title && item.frontmatter.description
            )
            .map((item) => (
              <ComponentCard
                title={item.frontmatter.title}
                description={item.frontmatter.description}
                link={
                  '/base/' +
                  item.frontmatter.title.toLowerCase().replace(' ', '-')
                }
              >
                {item.example}
              </ComponentCard>
            ))
        }
      </Deck>
    </Section>
  </Main>

  <Section>
    <Heading>Typography components</Heading>

    <Deck>
      <ComponentCard
        title="Heading"
        description="A native, styled heading element."
        link="/typography/heading/"
      >
        <Group>
          <Heading size="xl">Hello World</Heading>
        </Group>
      </ComponentCard>

      <ComponentCard
        title="Label"
        description="A native, styled label element."
        link="/typography/label/"
      >
        <Label size="lg">Label</Label>
      </ComponentCard>

      <ComponentCard
        title="Link"
        description="A native, styled link element."
        link="/typography/link/"
      >
        <Link
          href="#"
          size="lg"
          as="button"
          style="background: none; border: none;"
          >Link</Link
        >
      </ComponentCard>

      <ComponentCard
        title="List"
        description="A native, styled list element with list items inside."
        link="/typography/list/"
      >
        <List>
          <ListItem>Item 1</ListItem>
          <ListItem>Item 2</ListItem>
          <ListItem>Item 3</ListItem>
        </List>
      </ComponentCard>

      <ComponentCard
        title="Paragraph"
        description="A native, styled paragraph element."
        link="/typography/paragraph/"
      >
        <Paragraph>The quick brown fox jumps over the lazy dog</Paragraph>
      </ComponentCard>
    </Deck>
  </Section>
  <Cta>
    {data.cta.buttons.map((button: any) => <Button {...button} />)}
  </Cta>
  <Footer />
</Layout>

<style>
  .hero-section {
    background-image: url('/landing-background.png') !important;
    background-position: center !important;
    background-size: cover !important;
    background-repeat: no-repeat !important;
  }
</style>
