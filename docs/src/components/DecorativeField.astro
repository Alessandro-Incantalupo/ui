---
import { Carousel, Column, Grid, Masonry, Split, Spread, Row, Wrap } from 'fulldev-ui'
import DecorativeBox from './DecorativeBox.astro'
const { structure, frame } = Astro.props

const structureBoxCounts: { [key: string]: number } = {
  carousel: 4,
  column: 3,
  grid: 4,
  masonry: 6,
  split: 2,
  spread: 2,
  row: 4,
  wrap: 5,
}

const boxCount = structureBoxCounts[structure] || 0
---

{structure === 'carousel' && (
  <Carousel
    class="decorative-field"
    class:list={'not-content'}
    style="overflow-x: scroll; !important"
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Carousel>
)}

{structure === 'column' && (
  <Column
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Column>
)}

{structure === 'grid' && (
  <Grid
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Grid>
)}

{structure === 'masonry' && (
  <Masonry
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'masonry' ? `min-height: ${Math.floor(Math.random() * (100 - 60 + 1)) + 60}px;` : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Masonry>
)}

{structure === 'split' && (
  <Split
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Split>
)}

{structure === 'spread' && (
  <Spread
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Spread>
)}

{structure === 'row' && (
  <Row
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Row>
)}

{structure === 'wrap' && (
  <Wrap
    class="decorative-field"
    class:list={'not-content'}
  >
    {
      Array.from({ length: boxCount }, (_, i) => (
        <DecorativeBox
          key={i}
          style={structure === 'carousel' ? 'min-width: 300px;' : ''}
        />
      ))
    }
    {frame && <DecorativeBox frame={frame} />}
    <slot />
  </Wrap>
)}

<style>
  .decorative-field {
    border: 1px solid var(--border);
    border-radius: 8px;
    background-color: var(--background);
    padding: var(--space-4);
    overflow: hidden;
  }
</style>
