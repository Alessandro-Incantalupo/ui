---
import type { CollectionEntry } from 'astro:content'
import Block from 'fulldev-ui/components/Block.astro'
import Blocks from 'fulldev-ui/components/Blocks.astro'
import Button from 'fulldev-ui/components/Button.astro'
import Head from 'fulldev-ui/components/Head.astro'
import Sidebar from 'fulldev-ui/components/Sidebar.astro'

type Props = Partial<CollectionEntry<'pages'>> & {
  class?: string
}

const { slug, data, class: classes } = Astro.props
const { logo, header, headers, footer, footers, channels, sidebar } = data || {}
---

<!doctype html>
<html
  lang="nl"
  class:list={[
    slug,
    {
      'theme-dark': data?.theme === 'dark',
    },
  ]}
>
  <Head {...Astro.props} />
  <body
    class:list={[
      classes,
      {
        'has-sidebar': sidebar,
      },
    ]}
  >
    <Block
      _bookshop_name="Header"
      {logo}
      {...header}
    />
    <Blocks {...headers} />
    <Sidebar {sidebar} />
    <main
      data-pagefind-body
      class:list={[
        classes,
        {
          'has-sidebar': sidebar,
        },
      ]}
    >
      <slot />
    </main>
    {
      channels?.whatsapp && (
        <Button
          variant="solid"
          color="brand"
          icon="brand-whatsapp"
          size="lg"
          href={`https://wa.me/${channels.whatsapp}`}
          style={{
            position: 'fixed',
            right: 'var(--space-4)',
            bottom: 'var(--space-4)',
            backgroundColor: '#46A758',
          }}
        />
      )
    }
    <Block
      _bookshop_name="Footer"
      {logo}
      {...footer}
    />
    <Blocks {...footers} />
    <Fragment set:html={data?.code?.body} />
    <style lang="scss" is:global>
      :root {
        --screen: 1536px;
        --gutter: max(4vw, calc(100vw - var(--screen)) / 2);
      }

      html,
      body {
        box-sizing: border-box;
        margin: 0;
        background-color: var(--color-background);
        padding: 0;
        width: 100%;
        min-height: 100vh;
        color: var(--base-11);
        font-size: var(--text-2);
        font-family: var(--font-family);
      }

      body {
        display: grid;
        grid-template-areas:
          'header'
          'main'
          'footer';
        align-items: start;
        width: 100%;
        max-width: 100vw;

        .header {
          grid-area: header;
        }

        &.has-sidebar {
          @media (min-width: 1024px) {
            grid-template-columns: auto 1fr;
            grid-template-areas:
              'header header'
              'sidebar main'
              'footer footer';
            --gap: min(var(--gutter), var(--space-7));
            padding-left: var(--gutter);
          }

          .header {
            margin-left: calc(var(--gutter) * -1);
            width: calc(100% + var(--gutter));
          }
        }

        .sidebar {
          position: sticky;
          top: 0;
          grid-area: sidebar;
        }

        main {
          display: flex;
          position: relative;
          grid-area: main;
          flex-direction: column;
        }

        .footer {
          grid-area: footer;
        }
      }
    </style>
  </body>
</html>
