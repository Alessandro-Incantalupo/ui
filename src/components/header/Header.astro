---
import type { ComponentProps } from 'astro/types'
import { buildProps, type BuildProps } from '../../utils'
import { Buttons } from '../buttons'
import { Links } from '../links'
import { Logo } from '../logo'
import HeaderNav from './HeaderNav.astro'
import HeaderRoot from './HeaderRoot.astro'

interface Base
  extends ComponentProps<typeof HeaderRoot>,
    Pick<ComponentProps<typeof Logo>, 'logo' | '_logo'>,
    ComponentProps<typeof Links>,
    ComponentProps<typeof Buttons>,
    ComponentProps<typeof HeaderNav> {}

type Props = BuildProps<Base, 'header'>
const props = buildProps(Astro, 'header')

const { logo, _logo, ...rest } = props
---

<HeaderRoot {...props}>
  <Logo
    {logo}
    {_logo}
  />
  <HeaderNav>
    <Links {...props} />
    <Buttons {...props} />
    <slot name="nav" />
  </HeaderNav>
  <slot />
</HeaderRoot>

<style is:global>
  .header-root .button:first-child {
    order: 2;
  }
</style>

<!-- <div class="gap-flow4 flex">
  <ButtonGroup buttons={header.buttons} />
  <label
    class="button-secondary hue-base lg:hidden"
    for="header-toggle"
  >
    <i class="icon:menu-2 peer-checked:icon:x text-flow2 h-1.4em w-1.4em block" />
  </label>
</div>
<input
  id="header-toggle"
  class="peer hidden"
  type="checkbox"
/>

<div class:list="py-flow6 z-90 bg-hue1 border-hue6 !absolute left-0 right-0 top-full !hidden flex-col items-center border-y text-center backdrop-blur-lg peer-checked:max-lg:!flex">
  <Links
    layout="col"
    align="center"
    links={header.links}
  />
  <Buttons
    layout="col"
    buttons={header.buttons}
  />
</div> -->
