---
import type { ComponentProps } from 'astro/types'
import { buildProps, type BuildProps } from '../../utils'
import { Button } from '../button'
import { Buttons } from '../buttons'
import { Links } from '../links'
import { Logo } from '../logo'
import HeaderNav from './HeaderNav.astro'
import HeaderRoot from './HeaderRoot.astro'

interface Base
  extends ComponentProps<typeof HeaderRoot>,
    Pick<ComponentProps<typeof Logo>, 'logo' | '_logo'>,
    ComponentProps<typeof Links>,
    ComponentProps<typeof Buttons>,
    ComponentProps<typeof HeaderNav> {}

type Props = BuildProps<Base, 'header'>
const props = buildProps(Astro, 'header')

const { logo, _logo } = props
---

<HeaderRoot {...props}>
  <Logo
    {logo}
    {_logo}
  />
  <HeaderNav>
    <Links {...props} />
    <Buttons {...props} />
    <div class="fullcart-icon"></div>
    <label
      class="button-secondary hue-base lg:hidden"
      for="header-toggle"
    >
      <!-- TODO fix use of uno class -->
      <Button
        look="soft"
        hue="base"
        icon="menu-2"
        class="pointer-events-none"
      />
    </label>
    <input
      id="header-toggle"
      class="peer"
      type="checkbox"
    />
    <slot name="nav" />
    <Links {...props} />
  </HeaderNav>
  <slot />
</HeaderRoot>

<style>
  .peer {
    display: none;

    @media (min-width: 1024px) {
      ~ :global(.links) {
        display: none;
      }
    }

    &:checked ~ :global(.links) {
      display: flex;
      position: absolute;
      top: 100%;
      right: 0;
      left: 0;
      flex-direction: column;
      align-items: center;
      background: var(--background);
      padding: var(--spacing-6);
      width: 100%;

      @media (min-width: 1024px) {
        display: none !important;
      }
    }
  }

  :global(.fullcart-icon button) {
    --background: var(--base-3) !important;
    --color: var(--base-11) !important;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;
  }
</style>
