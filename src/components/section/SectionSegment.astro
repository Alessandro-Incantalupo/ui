---
import { getSlot } from '@silveltman/fullui/utils'
import type { HTMLAttributes } from 'astro/types'
interface Props {
  align?: 'start' | 'center' | 'stretch'
  layout?: 'split' | 'stack'
  frame?: 'fill' | 'panel' | 'screen'
  class?: HTMLAttributes<'div'>['class']
}

const {
  layout = 'left',
  align = 'start',
  frame = 'fill',
  class: className,
} = Astro.props
const slot = await getSlot(Astro)
---

{
  slot && (
    <div
      class:list={[
        'segment',
        'layout-' + layout,
        'frame-' + frame,
        'align-' + align,
        className,
      ]}
    >
      <Fragment set:html={slot} />
    </div>
  )
}

<style>
  div {
    display: flex;
    flex-direction: column;
    position: relative;
    z-index: 10;
    gap: var(--flow4);
    column-gap: var(--gutter);
    container: segment / inline-size;
    width: 100%;

    &:where(.align-left) {
      align-items: flex-start;
      text-align: left;
    }

    &:where(.align-center) {
      align-items: center;
      text-align: center;
    }

    &:where(.align-stretch) {
      align-items: flex-start;
      text-align: left;

      @media (min-width: 1024px) {
        align-items: center;
        justify-content: space-between;
        flex-direction: row;
      }
    }

    &:where(.layout-split) {
      align-items: flex-start;
      text-align: left;
    }

    /* &:where(.frame-panel:not(:has(.frame-panel))) {
      padding: var(--gutter);
    } */
    &:where(.frame-panel) {
      padding: var(--gutter);
    }

    &:where(.frame-screen) {
      /* margin: auto 0; */
    }
  }
</style>
