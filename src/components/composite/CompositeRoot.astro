---
import { getSlot } from '../../utils'

interface Props {
  density?: 'compact' | null
  layout?: 'split' | 'stack' | null
  frame?: 'panel' | 'fill' | 'screen' | null
  align?: 'start' | 'center' | 'stretch' | null
  class?: string | null
}

const { density, frame, align, layout, class: className } = Astro.props
const slot = await getSlot(Astro)
---

{
  slot && (
    <div class:list={['composite', align, frame, layout, density, className]}>
      <Fragment set:html={slot} />
    </div>
  )
}

<style>
  div {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-4);
    z-index: 1;
    width: 100%;

    &:where(.center) {
      align-items: center;
    }

    &:where(.panel) {
      padding: var(--gutter);
    }

    &:where(.panel.compact) {
      gap: var(--spacing-4);
      padding: var(--spacing-4);
    }

    &:where(.stretch) {
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      /* @media (min-width: 1024px) {
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
      } */
    }

    &:where(.split.start) {
      @media (min-width: 1024px) {
        position: sticky;
        top: var(--spacing-5);
      }
    }
  }
</style>
