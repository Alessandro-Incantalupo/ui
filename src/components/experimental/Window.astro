---
import Button from 'fulldev-ui/components/Button.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Spread from 'fulldev-ui/components/structures/Spread.astro'

const { componentProps } = Astro.props

const randomId = Math.random().toString(36).substring(2, 15)
const id = componentProps.title?.toLowerCase().replace(/ /g, '-') ?? randomId

const isComponent = Astro.url.pathname.includes('components/')

console.log(Astro.url.pathname, isComponent)
---

<div class:list={['window', isComponent && 'component']}>
  {
    !isComponent && (
      <Spread
        style={{ width: '100%' }}
        compact
      >
        <Heading
          level={3}
          size="sm"
          html={componentProps.title}
        />

        <Button
          as="label"
          for={id}
          variant="soft"
          style={{
            marginLeft: 'auto',
          }}
        >
          Preview / Code
        </Button>
      </Spread>
    )
  }
  <div class="live-code-layout">
    {
      !isComponent && (
        <input
          type="checkbox"
          id={id}
          name={id}
          class="window-toggle"
        />
      )
    }
    <div class="example-container">
      <slot name="example" />
    </div>
    <div class="code-container">
      <slot name="code" />
    </div>
  </div>
</div>

<style lang="scss" is:global>
  .window {
    width: 100%;

    &.component {
      border: 1px solid var(--base-6);
      border-radius: var(--radius-2);
      overflow: hidden;

      .example-container {
        padding: var(--space-5);
      }

      .astro-code {
        border: none;
        border-top: 1px solid var(--base-6);
        border-radius: 0px;
      }
    }

    &:not(.component) {
      .live-code-layout {
        display: flex;
        flex-direction: column;
        margin-top: var(--space-4);
        border: 1px solid var(--base-6);
        border-radius: var(--radius-2);
        width: 100%;
        overflow: hidden;

        .code-container {
          display: none;

          .astro-code {
            margin: 0;
            background-color: var(--base-2) !important;
            padding: var(--space-5);
          }
        }

        .window-toggle {
          display: none;
          visibility: hidden;
          opacity: 0;
        }

        .window-toggle:checked {
          & ~ .example-container {
            display: none;
          }
          & ~ .code-container {
            display: block;
          }
        }
      }
    }
  }
</style>
