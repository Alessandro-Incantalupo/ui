---
interface Props {
  label: string
  options: string[]
  required?: boolean
}

const { label, options, required } = Astro.props
---

{
  label && options && (
    <div>
      <label for={label}>{label}</label>
      <select
        id={label}
        name={label}
        {required}
      >
        <option
          value="Niks geselecteerd"
          disabled
          selected
        >
          Maak een keuze
        </option>
        {options.map((option) => (
          <option value={option}>{option}</option>
        ))}
      </select>
    </div>
  )
}

<style>
  div {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-1);

    select {
      box-shadow: var(--un-ring-offset-shadow), var(--un-ring-shadow),
        var(--un-shadow);
      background-color: var(--un-preset-theme-backgroundColor-secondary);
      --un-ring-color: var(--un-preset-theme-borderColor-secondary);

      &:hover {
        background-color: var(
          --un-preset-theme-backgroundColor-secondary-hover
        );
        --un-ring-color: var(--un-preset-theme-borderColor-secondary-hover);
      }

      &:active {
        background-color: var(
          --un-preset-theme-backgroundColor-secondary-active
        );
      }
    }
  }
</style>
