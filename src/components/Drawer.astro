---
import type { ComponentProps, HTMLTag } from 'astro/types'
import Box from './Box.astro'
import Button from './Button.astro'
import Card from './Card.astro'
import Root from './Root.astro'

type Props<As extends HTMLTag = 'a'> = ComponentProps<typeof Card<As>> & {
  label?: string
  icon?: string
  position?: 'left' | 'right'
}

const {
  id = 'drawer',
  label,
  icon,
  variant = 'subtle',
  structure = 'column',
  position = 'left',
  ...rest
} = Astro.props
---

<Button
  as="button"
  variant="soft"
  type="button"
  id={`${id}-button`}
  class="drawer-button"
  text={label}
  icon={icon}
  onclick={`document.getElementById('${id}').showModal()`}
/>

<Root
  as="dialog"
  class="drawer"
  {id}
  {position}
  {variant}
  onclick={`event.target === this && this.close()`}
>
  <Box
    {variant}
    {structure}
    {position}
    {...rest}
  >
    <slot />
  </Box>
</Root>

<style lang="scss" is:global>
  .drawer {
    flex-shrink: 0;
    align-items: stretch;
    box-sizing: border-box;
    margin: 0 !important;
    outline: 0;
    border: 0;
    background: var(--background);
    padding: 0;
    max-width: 520px;
    height: 100vh;
    max-height: 100vh;

    &::backdrop {
      background: rgba(0, 0, 0, 0.5);
    }

    &.position-left {
      margin-right: 0;
    }

    &.position-right {
      right: 0;
    }

    .box {
      padding: calc(var(--space-5) * 2) calc(var(--space-7) * 3);
      min-width: calc(var(--space-7) * 14);
      height: 100vh;
      overflow-x: hidden;
      overflow-y: auto;

      &.position-left {
        padding-left: var(--gutter);
      }

      &.position-right {
        padding-right: var(--gutter);
      }
    }
  }
</style>
