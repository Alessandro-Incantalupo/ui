---
import {
  getEntry,
  type CollectionEntry,
  type ContentCollectionKey,
} from 'astro:content'
import {
  buildProps,
  getReference,
  type BuildProps,
  type GetReference,
} from '../../utils'

interface Base extends GetReference {
  prose?: CollectionEntry<ContentCollectionKey>['render']
}

type Props = BuildProps<Base, 'prose'>
const props = buildProps(Astro, 'prose')

console.log('prosee', props)

let { prose: render, collection, slug } = props

const reference = getReference(props)
const entry = reference && (await getEntry(reference))
if (collection && slug) render = (await getEntry(collection, slug)).render
const Content = render ? (await render()).Content : null
---

{Content && <Content />}
