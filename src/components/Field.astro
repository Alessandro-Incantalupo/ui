---
import type { ComponentProps } from 'astro/types'
import { buildProps, type BuildProps } from '../utils'
import Input from './Input.astro'
import Label from './Label.astro'
import Options from './Options.astro'
import Tag from './Tag.astro'

interface Base
  extends Pick<ComponentProps<typeof Label>, 'label' | '_label'>,
    Pick<ComponentProps<typeof Options>, 'options' | '_options'>,
    Pick<ComponentProps<typeof Input>, 'input' | '_input'> {}

type Props = BuildProps<Base, 'field'>
const props = buildProps(Astro, 'field')

const { options, _options, label, _label, input, _input, ...rest } = props
---

<Tag {...rest}>
  <slot />
  <Label
    {label}
    {_label}
  />
  {
    options ? (
      <Options
        {options}
        {_options}
      />
    ) : (
      <Input
        {input}
        {_input}
      />
    )
  }
</Tag>

<style is:global>
  .field {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-1);
  }
</style>
