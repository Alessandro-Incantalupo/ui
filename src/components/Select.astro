---
import type { HTMLAttributes } from 'astro/types'
import Icon from 'fulldev-ui/components/Icon.astro'
import Label from 'fulldev-ui/components/Label.astro'
import Root from 'fulldev-ui/components/Root.astro'

type Props = HTMLAttributes<'select'> & {
  color?: 'base' | 'brand'
  label?: string
  placeholder?: string
  options?: string[]
  value?: string
}

const {
  label,
  placeholder,
  options,
  value,
  name,
  required,
  disabled,
  ...rest
} = Astro.props
---

<Root
  class:list={['select']}
  {...rest}
>
  <Label
    for={name}
    text={label}
  />
  <Root
    as="select"
    if={name || options}
    id={name}
    {name}
    {required}
    {disabled}
  >
    <Root
      as="option"
      value={placeholder}
      text={placeholder}
      disabled
      selected
    />
    {
      options?.map((option: any) => (
        <Root
          as="option"
          selected={value === option}
          text={option}
          value={option}
        />
      ))
    }
    <slot />
  </Root>
  <Icon name="chevron-down" />
</Root>

<style is:global lang="scss">
  .select {
    display: flex;
    position: relative;
    flex-direction: column;
    gap: var(--space-1);
    width: 100%;

    .icon {
      position: absolute;
      right: var(--space-4);
      bottom: var(--space-4);
      width: var(--text-1);
      height: var(--text-1);
    }

    select {
      display: flex;
      position: relative;
      align-items: center;
      appearance: none;
      appearance: none;
      outline: none;
      border: 1px solid var(--border);
      border-radius: var(--radius-1);
      background-color: var(--background);
      padding: var(--space-3);
      width: 100%;
      min-width: var(--space-3);
      height: calc(var(--text-1) + 2 * var(--space-4));
      color: var(--text);
      font-weight: var(--font-weight);
      font-size: var(--text-1);
      line-height: 1.25;
      font-family: var(--font-family);

      &:hover {
        outline: none;
      }

      &:focus {
        outline: none;
        box-shadow: inset 0 0 0 2px var(--border);
      }

      &:disabled {
        opacity: 50%;
        cursor: not-allowed;
        pointer-events: none;
      }
    }

    option {
      color: var(--text);
      font-weight: var(--font-weight);
      font-size: var(--text-1);
      line-height: 1;
      font-family: var(--font-family);
    }
  }
</style>
