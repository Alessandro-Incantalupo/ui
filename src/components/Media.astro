---
import type { ComponentProps } from 'astro/types'
import { buildProps, type BuildProps } from '../utils'
import Image from './Image.astro'
import Video from './Video.astro'

interface Base
  extends Pick<ComponentProps<typeof Video>, 'video' | '_video'>,
    Pick<ComponentProps<typeof Image>, 'image' | '_image'> {
  media?: string | null
  thumbnail?: boolean | null
}

type Props = BuildProps<Base, 'media'>
const props = buildProps(Astro, 'media')

const { media, video, _video, image, _image, thumbnail, ...rest } = props

// FIXME
const isVideo =
  typeof image === 'string' &&
  (image?.includes('youtube.com') || image?.includes('youtu.be'))
---

{
  isVideo ? (
    <Video
      {thumbnail}
      video={image}
      _video={_image}
    />
  ) : (
    <Image
      {image}
      {_image}
    />
  )
}

<style is:global>
  .display {
    display: flex;
    row-gap: var(--spacing-4);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--spacing-6) * 4), 500px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }
  }
</style>
