---
import { getCollection, getEntry } from 'astro:content'
import Button from 'fulldev-ui/components/Button.astro'
import Spread from './Spread.astro'

const { currentSlug } = Astro.props

const sidebarEntry = await getEntry('settings', 'components')
const sidebar = Array.isArray(sidebarEntry.data.sidebar)
  ? sidebarEntry.data.sidebar
  : []

async function getFlattenedPages(sidebar: any[]): Promise<any[]> {
  const flattenedPages: any[] = []
  for (const item of sidebar) {
    if (item.links) {
      flattenedPages.push(...item.links)
    }
    if (item.folder) {
      const pages = await getCollection(
        'pages',
        (entry: any) =>
          entry.slug.startsWith(item.folder) &&
          !entry.slug.endsWith(item.folder)
      )
      flattenedPages.push(
        ...pages.map((page: any) => ({
          href: `/${page.slug}`,
          title: page.data.title,
        }))
      )
    }
  }
  return flattenedPages
}

const flattenedPages: any[] = await getFlattenedPages(sidebar)
const currentIndex = flattenedPages.findIndex(
  (page) => page.href === `/${currentSlug}`
)

const prevPage = flattenedPages[currentIndex - 1] || null
const nextPage = flattenedPages[currentIndex + 1] || null
---

<Spread>
  <Button
    href={prevPage?.href}
    variant="secondary"
    text={prevPage?.title + '←'}
  />
  <Button
    href={nextPage?.href}
    variant="secondary"
    text={nextPage?.title + '→'}
    class="ml-auto"
  />
</Spread>
