---
import type { ComponentProps } from 'astro/types'
import { DisplayRoot } from '.'
import { Channels } from '../channels'
import { Heading } from '../heading'
import { Html } from '../html'
import { Icon } from '../icon'
import { Rating } from '../rating'
import { Socials } from '../socials'
import { Specs } from '../specs'
import { Tagline } from '../tagline'
import { Text } from '../text'

interface Props
  extends ComponentProps<typeof DisplayRoot>,
    ComponentProps<typeof Rating>,
    ComponentProps<typeof Icon>,
    ComponentProps<typeof Tagline>,
    ComponentProps<typeof Text>,
    ComponentProps<typeof Specs>,
    ComponentProps<typeof Html> {
  heading?:
    | ComponentProps<typeof Heading>
    | ComponentProps<typeof Heading>['heading']
}

const headingProps = () => {
  if (typeof Astro.props.heading == 'string') return { ...Astro.props }
  else return { ...Astro.props.heading }
}

const { props } = Astro
---

<DisplayRoot {...props}>
  <Heading {...headingProps()} />
  <Rating {...props} />
  <Icon {...props} />
  <Tagline {...props} />
  <Html {...props} />
  <Text {...props} />
  <Specs {...props} />
  <Channels {...props} />
  <Socials {...props} />
  <slot />
</DisplayRoot>
