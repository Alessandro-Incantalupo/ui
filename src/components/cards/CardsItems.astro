---
import type { ComponentProps } from 'astro/types'
import {
  getCollection,
  type CollectionEntry,
  type ContentCollectionKey,
} from 'astro:content'
import { Card } from '../card'

interface Props extends ComponentProps<typeof Card> {
  collection?: ComponentProps<typeof Card>['collection']
  cards?: (
    | ComponentProps<typeof Card>
    | ComponentProps<typeof Card>['slug']
    | CollectionEntry<ContentCollectionKey>
    | undefined
    | null
  )[]
}

let { cards, collection, frame, scheme } = Astro.props

if ((!cards || cards.length === 0) && collection) {
  const items = await getCollection(collection)
  const slugs = items.map(({ slug }) => slug)
  cards = slugs
}
---

{
  cards?.map((card) => {
    if (!card) return null
    if (typeof card === 'string') card = { slug: card }
    return (
      <Card
        {collection}
        {frame}
        {...card}
      />
    )
  })
}
