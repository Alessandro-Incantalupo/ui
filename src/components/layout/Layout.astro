---
import type { ComponentProps } from 'astro/types'
import { LayoutBody, LayoutMain, LayoutRoot } from '.'
import { buildProps, type BuildProps, type GetReference } from '../../utils'
import Head from '../Head.astro'
import Legal from '../Legal.astro'
import Prose from '../Prose.astro'
import Section from '../Section.astro'
import Sections from '../Sections.astro'
import { Footer } from '../footer'
import { Header } from '../header'

interface Base
  extends GetReference,
    Pick<ComponentProps<typeof Header>, 'header' | '_header'>,
    Pick<ComponentProps<typeof Head>, 'head' | '_head'>,
    Pick<ComponentProps<typeof Footer>, 'footer' | '_footer'>,
    Pick<ComponentProps<typeof Prose>, 'prose' | '_prose'>,
    Pick<ComponentProps<typeof Legal>, 'legal' | '_legal'> {
  hero?: ComponentProps<typeof Section>['section']
  _hero?: ComponentProps<typeof Section>['_section']
  cta?: ComponentProps<typeof Section>['section']
  _cta?: ComponentProps<typeof Section>['_section']
}

type Props = BuildProps<Base, 'layout'>
const props = buildProps(Astro, 'layout')

const {
  head,
  _head,
  header,
  _header,
  hero,
  _hero,
  prose,
  _prose,
  cta,
  _cta,
  footer,
  _footer,
  legal,
  _legal,
  ...restProps
} = props

// const _layout = await getEntry('settings', 'layout')
---

<LayoutRoot {...props}>
  <Head
    {...props}
    {head}
    {_head}
  >
    <slot name="head" />
  </Head>
  <LayoutBody {...props}>
    <Header
      {header}
      {_header}
    />
    <LayoutMain {...props}>
      <Section
        id="hero"
        section={hero}
        _section={_hero}
        {prose}
        {_prose}
        {...restProps}
      />
      <Prose
        {prose}
        {_prose}
        {...restProps}
      />
      <slot />
      <Sections {...props} />
      <Section
        id="cta"
        section={cta}
        _section={_cta}
      />
    </LayoutMain>
    <Footer
      {footer}
      {_footer}
    />
    <Legal
      {legal}
      {_legal}
    />
  </LayoutBody>
</LayoutRoot>
