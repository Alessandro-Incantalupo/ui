---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Root from 'fulldev-ui/components/Root.astro'

type Props<As extends HTMLTag = 'section'> = Polymorphic<{ as: As }> & {
  scheme?: 'light' | 'dark'
  color?: 'base' | 'brand'
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
  frame?: 'fill' | 'viewport' | 'contain' | 'panel'
  variant?: 'ghost' | 'subtle' | 'outline' | 'soft' | 'solid' | 'surface'
  align?: 'start' | 'center' | 'end'
  structure?: 'column' | 'split' | 'spread'
  // order?: 'reverse' | 'switch'
  space?: 'auto' | 'none'
  compact?: boolean
}

const {
  as = 'div',
  space = 'auto',
  frame = 'fill',
  structure = 'column',
  variant = 'ghost',
  align = 'start',
  ...rest
} = Astro.props
---

<Root
  class:list={['section']}
  {as}
  {frame}
  {variant}
  {align}
  {space}
  {structure}
  {...rest}
>
  <slot />
</Root>

<style is:global lang="scss">
  .section {
    --screen: 1536px;
    --gutter: max(4vw, calc(100vw - var(--screen)) / 2);

    position: relative;
    margin: var(--outer-y) var(--outer-x);
    background-color: var(--background);
    padding: var(--inner-y) var(--inner-x);
    width: 100%;
    max-width: calc(100% - (2 * var(--outer-x)));
    height: auto;

    &.frame-fill {
      padding: var(--space-7) var(--gutter) var(--space-7)
        var(--gap, (var(--gutter)));
      max-width: 100%;
    }

    &.frame-viewport {
      padding: var(--space-7) var(--gutter) var(--space-7)
        var(--gap, (var(--gutter)));
      min-height: 100vh;
    }

    &.frame-panel {
      margin: var(--space-7) var(--gutter) var(--space-7)
        var(--gap, (var(--gutter)));
      border: 1px solid var(--border);
      border-radius: var(--radius-2);
      padding: var(--space-6) min(var(--gutter), var(--space-7));
      width: auto;
      overflow: hidden;

      & {
        @media (min-width: 1024px) {
          padding-top: var(--space-7);
          padding-bottom: var(--space-7);
        }
      }
    }

    // &.frame-contain {
    //   --inner-x: max(4vw);
    //   --outer-x: max(0px, calc(var(--gutter) - var(--inner-x)));
    //   --inner-y: var(--space-7);
    //   --outer-y: 0;
    // }

    // &.order-reverse {
    //   --is-reverse: initial;

    //   > *:first-child {
    //     order: 999;
    //   }

    //   & > *:last-child {
    //     order: -999;
    //   }
    // }
  }
</style>
