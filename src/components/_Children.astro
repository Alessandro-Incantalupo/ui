<!-- ---
import { isObject,pascal } from 'radash'
import { isArray,isString } from 'remeda'

interface Props {
  [key: string]: any
}

const components = await Astro.glob('../**/*.astro')
---

{
  Object.entries(Astro.props).map(([key, value]) => {
    const lastPart = key.split(/(?=[A-Z])/).pop()
    if (!lastPart) return null
    const part = pascal(lastPart)

    if (part === 'Text' && isString(value)) return value
    if (part === 'Html') return <Fragment set:html={value} />

    const Component: any = components.find((component) => {
      const fileName = component.default.moduleId?.split('/').pop()
      const componentName = fileName?.split('.')[0]
      return componentName === part
    })?.default

    if (!Component) return null
    if (isObject(value) || isArray(value)) return <Root {...value} />
    return <Root html={value} />
  })
} -->
