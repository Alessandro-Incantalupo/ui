---
import type { HTMLAttributes } from 'astro/types'
import Input, { type Props as InputProps } from '../elements/input/Input.astro'
import Select, {
  type Props as SelectProps,
} from '../elements/select/Select.astro'
import Textarea, {
  type Props as TextareaProps,
} from '../elements/textarea/Textarea.astro'
import type { Props as ButtonProps } from './button/Button.astro'
import Button from './button/Button.astro'

export interface Props {
  form?: string | null
  title?: HTMLAttributes<'input'>['value'] | null
  key?: HTMLAttributes<'input'>['value'] | null
  inputs?: (InputProps | SelectProps | TextareaProps)[] | null
  button?: ButtonProps | null
}

const components: any = {
  input: Input,
  textarea: Textarea,
  select: Select,
}

let {
  form,
  title,
  key,
  inputs,
  button = {
    label: 'Verstuur',
    href: '/bericht-ontvangen',
  },
} = Astro.props

// const formName = form?.split('/').pop()?.replace('.md', '') || 'myplaceholder'
// const formEntry = await getEntry('forms', formName)
// const formData = formEntry ? formEntry.data : Astro.props

// const inboxKey = import.meta.env?.PUBLIC_APP_URL?.replace('https://', '')
//   ?.replace('http://', '')
//   ?.split('.')
//   ?.shift()
---

{
  Astro.props.form && (
    <form method="POST">
      <Input label="Naam" />
      <Input label="Email" />
      <Input label="Telefoonnummer" />
      <Button text="Verstuur" />
    </form>
  )
}

<!-- {
  formData.inputs && (
    <form
      method="POST"
      action={formData.button.href}
    >
      {formData.inputs?.map((input: any) => {
        const key = input._bookshop_name.split('/').pop()
        const Component = components[key]
        return <Component {...input} />
      })}
      <slot />
      <input
        type="hidden"
        name="_subject"
        value={title}
      />
      <input
        type="hidden"
        name="inbox_key"
        value={inboxKey}
      />
      <input
        type="text"
        name="_gotcha"
        style="display: none;"
      />
      <button type="submit">{formData.button.label}</button>
    </form>
  )
} -->

<style is:global>
  form {
    gap: var(--flow2);
    display: flex;
    width: 100%;
    flex-direction: column;
    text-align: left;
    max-width: calc(var(--flow6) * 4);
    /* for panel only */
    padding: 0 var(--gutter) var(--spacer);

    a {
      margin-top: var(--flow2);
    }
  }
</style>
