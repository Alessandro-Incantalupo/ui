---
export interface Props {
  scheme: 'default' | 'reverse' | 'light' | 'dark'
  impact: 'low' | 'medium' | 'high' | 'extreme'
  layout: 'left' | 'center' | 'split' | 'wide'
  area: 'default' | 'panel'
  class?: string
}

const {
  scheme = 'default',
  impact = 'medium',
  layout = 'left',
  area = 'default',
  class: className,
} = Astro.props

const slot = await Astro.slots.render('default')
---

{
  slot?.trim().length > 0 && (
    <section
      class:list={[
        'section',
        'scheme-' + scheme,
        scheme + '-theme',
        scheme,
        'impact-' + impact,
        'layout-' + layout,
        'area-' + area,
        className,
      ]}
    >
      <Fragment set:html={slot} />
    </section>
  )
}

<style is:global>
  section {
    container: section / inline-size;
    position: relative;
    overflow-x: hidden;
    row-gap: var(--flow5);
    background: var(--bg);
    border-color: var(--ring);
    gap: var(--gutter);
    padding: var(--gutter);

    /* &:first-child {
      margin-top: 0;
      padding-top: var(--flow5);
    } */

    /* &:last-child {
      padding-bottom: var(--flow5);
    } */

    &,
    &:where(.layout-left) {
      display: flex;
      flex-direction: column;
    }

    &:where(.layout-split) {
      display: grid;
      align-items: center;

      @media (min-width: 1024px) {
        grid-auto-columns: 1fr;
        grid-auto-flow: column;

        /* NEEDDS GLOBAL */
        &:nth-child(even) {
          & > *:first-child {
            order: 2;
          }
        }
      }
    }

    &:where(.layout-center) {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      text-align: center;
    }

    &:where(.layout-wide) {
      display: flex;
      flex-direction: column;
      align-items: stretch;
    }

    /* &:where(.area-panel:not(:has(.area-panel))) {
      margin: var(--spacer) var(--gutter);
      border-width: var(--borderWidth);
      border-radius: var(--rounded2);
      gap: 0;
      padding: 0;
    } */

    &:where(.area-panel) {
      margin: var(--spacer) var(--gutter);
      border-width: var(--borderWidth);
      border-radius: var(--rounded2);
      gap: 0;
      padding: 0;
    }

    /* &:where(.area-screen) {
      min-height: 100vh;
    } */
  }
</style>
