---
import Icon from './Icon.astro'

interface Props {
  title: string
  text?: string
  icon?: string
  show?: boolean
}

const { title, text, icon, show = false } = Astro.props

const randomId = `toast_${Math.random().toString(36).substr(2, 9)}`
---

<div
  class="toast-container"
  data-toast-id={randomId}
>
  {!show && <button class="show-toast-button">{title}</button>}
  <div
    class="toast hidden"
    id={`toast_${randomId}`}
  >
    <p class="toast-message">
      <Icon icon={icon} />
      {text}
      <slot />
    </p>
  </div>
</div>

<script type="module">
  document.addEventListener('click', (event) => {
    const showToastButton = event.target.closest('.show-toast-button')
    if (showToastButton) {
      const toastContainer = showToastButton.closest('.toast-container')
      if (toastContainer) {
        const toastId = toastContainer.getAttribute('data-toast-id')
        const toast = document.getElementById(`toast_${toastId}`)

        if (toast) {
          toast.classList.remove('hidden')
          setTimeout(() => {
            toast.classList.add('hidden')
          }, 3000)
        }
      }
    }
  })
</script>

<style lang="postcss">
  .toast {
    position: fixed;
    bottom: 20px;
    left: 50%;
    background-color: #333;
    transform: translateX(-50%);
    color: #fff;
    padding: 10px;
    border-radius: 5px;
    z-index: 99999;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    transition: opacity 0.3s ease-in-out;

    & > .toast-message {
      margin: 0;

      & > svg {
        display: flex;
        height: 1rem;
      }
    }
  }

  .hidden {
    opacity: 0;
    pointer-events: none;
  }
</style>
