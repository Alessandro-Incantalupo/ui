---
import type { ComponentProps } from 'astro/types'
import {
  getEntry,
  type CollectionEntry,
  type ContentCollectionKey,
} from 'astro:content'
import { Root, Segment } from '.'
import Icon from '../Icon.astro'
import Price from '../Price.astro'
import Rating from '../Rating.astro'
import Writeup from '../writeup/Writeup.astro'

interface Props
  extends ComponentProps<typeof Root>,
    ComponentProps<typeof Segment>,
    ComponentProps<typeof Icon>,
    ComponentProps<typeof Rating>,
    ComponentProps<typeof Writeup>,
    ComponentProps<typeof Price> {
  // ComponentProps<typeof Specs>,
  // ComponentProps<typeof ButtonGroup>,
  reference?: {
    collection: ContentCollectionKey
    slug: CollectionEntry<ContentCollectionKey>['slug']
  }
}

let { props } = Astro
const entry = props.reference && (await getEntry(props.reference))
props = { ...entry?.data, ...props }
---

<Root {...props}>
  <slot />
  <Segment {...props}>
    <Icon {...props} />
    <Rating {...props} />
    <Writeup {...props}>
      <slot name="writeup" />
    </Writeup>
    <Price {...props} />
    <!-- <Specs {...props} /> -->
    <!-- <ButtonGroup {...props} /> -->
    <slot name="segment" />
  </Segment>
</Root>
