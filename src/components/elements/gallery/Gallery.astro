<!-- ---
import type { HTMLAttributes } from 'astro/types'
import { cva,type VariantProps } from 'cva'

export interface Props
  extends VariantProps<typeof variant>,
    HTMLAttributes<'div'> {
  noCarouselComponent?: boolean
}

const variant = cva({
  base: 'deck',
  variants: {
    layout: {
      carousel: [
        'px-Root -mx-Root pb-flow3 relative max-w-100vw flex flex snap-x flex-row items-start justify-start overflow-hidden overflow-x-auto scroll-smooth',
        '[&_.card]:(shrink-0 grow-0 snap-center text-flow2)',
        'size-small:[&_.card]:(w-18em max-w-46%)',
        '[&_.card]:(w-22em max-w-68%)',
        'size-large:[&_.card]:(w-26em max-w-90%)',
      ],
      grid: [
        'grid w-full grid-cols-2 size-small:grid-cols-2 size-large:grid-cols-1 [&>*]:grow',
        'size-small:sm:grid-cols-[repeat(auto-fill,minmax(220px,1fr))] ',
        'sm:grid-cols-[repeat(auto-fill,minmax(308px,1fr))] ',
        'size-large:sm:grid-cols-2',
        'size-large:md:grid-cols-[repeat(auto-fill,minmax(385px,1fr))]',
      ],
      masonry: [
        'w-full space-y-flow5 columns-2space-y-flow4 size-small:columns-2 size-large:columns-1 [&>*]:grow [&>*]:break-inside-avoid-column',
        'sm:columns-[308px] size-small:sm:columns-[220px] size-large:sm:columns-2',
        'size-large:md:columns-[385px]',
      ],
      row: 'grid gap-flow5 lg:grid-flow-col lg:auto-cols-fr',
    },
  },
  defaultVariants: {
    layout: 'grid',
  },
})
---

{
  Astro.props && (
    <div
      class={variant(Astro.props)}
      {...Astro.props}
    >
      <slot />
    </div>
  )
}

<style>
  .deck {
    gap: var(--flow5);
    position: relative;
  }
</style> -->
