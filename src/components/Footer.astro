---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Column from 'fulldev-ui/components/Column.astro'
import Heading from 'fulldev-ui/components/Heading.astro'
import Link from 'fulldev-ui/components/Link.astro'
import Root from 'fulldev-ui/components/Root.astro'
import Split from 'fulldev-ui/components/Split.astro'
import Text from 'fulldev-ui/components/Text.astro'
import Channel from 'fulldev-ui/components/experimental/Channel.astro'
import Logo from 'fulldev-ui/components/experimental/Logo.astro'

type Props<As extends HTMLTag = 'footer'> = Polymorphic<{ as: As }> & {
  structure?: 'spread' | 'row' | 'split' | 'column'
  variant?: 'base' | 'ghost' | 'subtle' | 'soft' | 'surface' | 'outline'
  frame?: 'fill' | 'panel' | 'contain'
  align?: 'start' | 'center' | 'end'
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
  theme?: 'light' | 'dark'
  color?: 'base' | 'brand'
  space?: 'none' | 'auto'
  compact?: boolean
  logo?: string
  heading?: string
  text?: string
  columns?: Array<{
    heading: string
    links: Array<{ href: string; text: string }>
  }>
  channels?: {
    phone?: string
    email?: string
    address?: string
  }
  company?: string
  hours?: Record<string, string>
} & Record<string, any>

const {
  as = 'footer',
  space = 'auto',
  variant = 'subtle',
  frame = 'fill',
  structure = 'split',
  size = 'sm',
  logo,
  heading,
  columns,
  text,
  channels,
  company,
  hours,
  ...rest
} = Astro.props
---

<Root
  class:list={['footer']}
  {structure}
  {as}
  {variant}
  {frame}
  {space}
  {size}
  {...rest}
>
  <slot>
    <Split align="start">
      <Column>
        <Column
          style={{ textDecoration: 'none' }}
          as="a"
          href="/"
        >
          {logo && <Logo src={logo} />}
          {
            heading && (
              <Heading
                as="p"
                level={2}
                text={heading}
              />
            )
          }
        </Column>
        {text && <Text text={text} />}
      </Column>
      {
        channels && (
          <Column compact>
            <Channel
              if={channels.phone}
              icon="phone"
              heading="Telefoon"
              text={channels.phone}
              href={`tel:${channels.phone}`}
            />
            <Channel
              if={channels.email}
              icon="mail"
              heading="Email"
              text={channels.email}
              href={`mailto:${channels.email}`}
            />
            <Channel
              if={channels.address}
              icon="pin"
              heading="Adres"
              text={channels.address}
              target="_blank"
              href={`https://maps.google.com/?q=${company} ${channels.address}`}
            />
          </Column>
        )
      }
      {
        hours && (
          <Column>
            <Heading
              text={'Openingstijden'}
              level={3}
            />
            {Object.entries(hours).map(([day, time]) => (
              <Text text={`${day}: ${time}`} />
            ))}
          </Column>
        )
      }
    </Split>

    {
      columns && (
        <Split align="start">
          {columns.map(({ heading, links }) => (
            <Column>
              <Heading
                text={heading}
                level={3}
              />
              {links.map((link) => (
                <Link
                  href={link.href}
                  text={link.text}
                />
              ))}
            </Column>
          ))}
        </Split>
      )
    }
    )
  </slot>
</Root>

<style is:global lang="scss">
  .footer {
    --screen: 1536px;
    --gutter: max(4vw, calc(100vw - var(--screen)) / 2);

    margin: var(--outer-y) var(--outer-x);
    margin-top: auto;
    background: var(--background);
    padding: var(--inner-y) var(--inner-x);
    width: 100%;
    max-width: calc(100% - (2 * var(--outer-x)));

    &.frame-fill {
      border-top: 1px solid var(--border);
      --inner-x: var(--gutter);
      --outer-x: 0;
      --inner-y: var(--space-7);
      --outer-y: 0;
    }

    &.frame-panel {
      margin-top: var(--space-2);
      margin-right: var(--gutter);
      margin-left: var(--gutter);
      border: 1px solid var(--border);
      border-radius: var(--radius-3);

      --inner-x: var(--gutter);
      --outer-x: 0;
      --inner-y: var(--space-7);
      --outer-y: 0;
    }

    &.frame-contain {
      --inner-x: max(4vw, var(--space-7));
      --outer-x: max(0px, calc(var(--gutter) - var(--inner-x)));
      --inner-y: var(--space-7);
      --outer-y: 0;
    }

    &.align-start {
      align-items: flex-start;
      text-align: left;
    }

    &.align-center {
      align-items: center;
    }

    &.align-end {
      align-items: flex-end;
    }
  }
</style>
