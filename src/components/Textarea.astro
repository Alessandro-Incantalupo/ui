---
import type { HTMLAttributes } from 'astro/types'
import Icon from 'fulldev-ui/components/Icon.astro'
import Label from 'fulldev-ui/components/Label.astro'
import Root from 'fulldev-ui/components/Root.astro'

type Props = HTMLAttributes<'textarea'> & {
  variant?: 'outline'
  color?: 'base' | 'brand'
  label?: string
  icon?: string
}

const {
  label,
  icon,
  rows,
  placeholder,
  name = placeholder,
  variant = 'outline',
  value,
  disabled,
  required,
  ...rest
} = Astro.props
---

<Root
  class:list={['textarea']}
  {...rest}
>
  <Label
    for={name}
    text={label}
  />
  <Root
    as="textarea"
    id={name}
    {name}
    {variant}
    {placeholder}
    {value}
    {disabled}
    {required}
    {rows}
  />
  <Icon name={icon} />
</Root>

<style is:global lang="scss">
  .textarea {
    display: flex;
    position: relative;
    flex-direction: column;
    gap: var(--space-1);
    width: 100%;

    .icon {
      position: absolute;
      top: 50%;
      right: var(--space-3);
      transform: translateY(-50%);
    }

    textarea {
      display: flex;
      position: relative;
      align-items: center;
      outline: none;
      border: 1px solid var(--border);
      border-radius: var(--radius-1);
      background-color: var(--background);
      padding: var(--space-3);
      width: 100%;
      height: calc((var(--text-1) + 2 * var(--space-4)) * 2);
      min-height: calc((var(--text-1) + 2 * var(--space-4)) * 2);
      resize: vertical;
      color: var(--text);
      font-weight: var(--font-weight);
      font-size: var(--text-1);
      line-height: 1.25;
      font-family: var(--font-family);

      &::placeholder {
        color: var(--text);
      }

      &:hover {
        outline: none;
      }

      &:focus {
        outline: none;
        box-shadow: inset 0 0 0 2px var(--border);
      }

      &:disabled {
        opacity: 50%;
        cursor: not-allowed;
        pointer-events: none;
      }
    }
  }
</style>
