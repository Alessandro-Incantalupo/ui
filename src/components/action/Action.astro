---
import type { ComponentProps } from 'astro/types'
import { ActionRoot } from '.'
import { Buttons } from '../buttons'
import { Form } from '../form'
import { Price } from '../price'
import { Select } from '../select'

interface Props
  extends ComponentProps<typeof ActionRoot>,
    ComponentProps<typeof Price>,
    ComponentProps<typeof Buttons> {
  form?: ComponentProps<typeof Form>
}

const { props } = Astro
---

<ActionRoot {...props}>
  <Form
    slug={typeof props.form == 'string' ? props.form : undefined}
    {...props}
  >
    <slot name="form" />
  </Form>
  <!-- TODO cleaner maken -->
  {
    props.variants?.map((variant: any) => (
      <Select
        label={variant.name}
        options={variant.options.map((item: any) => item.value)}
      />
    ))
  }
  <Price {...props}>
    <slot name="price" />
  </Price>
  <Buttons {...props}>
    <slot name="buttons" />
  </Buttons>
  <slot />
</ActionRoot>
