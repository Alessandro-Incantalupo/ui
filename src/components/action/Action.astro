---
import type { ComponentProps } from 'astro/types'
import { ActionRoot } from '.'
import { buildProps, type BuildProps } from '../../utils'
import { Buttons } from '../buttons'
import { Form } from '../form'
import FullcartAdd from '../fullcart/FullcartAdd.astro'
import { Price } from '../price'

interface Base
  extends ComponentProps<typeof ActionRoot>,
    Pick<ComponentProps<typeof Price>, 'price' | '_price'>,
    Pick<ComponentProps<typeof Buttons>, 'buttons' | '_buttons'> {
  form?: ComponentProps<typeof Form>
}

type Props = BuildProps<Base, 'action'>
const props = buildProps(Astro, 'action')
const { price, variants, _price, buttons, _buttons, ...restProps } = props
---

<ActionRoot {...restProps}>
  <Form
    slug={typeof props.form == 'string' ? props.form : undefined}
    {...props}
  >
    <slot name="form" />
  </Form>
  <FullcartAdd
    {price}
    {variants}
    id="my-cool-product"
  />
  <Price
    {price}
    {_price}
  />
  <Buttons
    {buttons}
    {_buttons}
  />
  <slot />
</ActionRoot>
