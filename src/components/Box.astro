---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Bento from './Bento.astro'
import Carousel from './Carousel.astro'
import Column from './Column.astro'
import Grid from './Grid.astro'
import Masonry from './Masonry.astro'
import Row from './Row.astro'
import Split from './Split.astro'
import Spread from './Spread.astro'
import Wrap from './Wrap.astro'

type Props<As extends HTMLTag = 'div'> = Polymorphic<{ as: As }> & {
  align?: 'start' | 'center' | 'end'
  position?: 'inset'
  space?: 'none' | 'auto'
  size?: 'sm' | 'md' | 'lg'
  structure?:
    | 'bento'
    | 'carousel'
    | 'column'
    | 'grid'
    | 'masonry'
    | 'row'
    | 'split'
    | 'spread'
    | 'wrap'
}

const structuresMap = {
  bento: Bento,
  carousel: Carousel,
  column: Column,
  grid: Grid,
  masonry: Masonry,
  row: Row,
  split: Split,
  spread: Spread,
  wrap: Wrap,
}

const {
  as = 'div',
  space = 'auto',
  structure = 'column',
  align = 'start',
  ...rest
} = Astro.props

const Structure = structuresMap[structure] ?? structuresMap['column']
---

<Structure
  {as}
  {align}
  {space}
  {...rest}
>
  <slot />
</Structure>
