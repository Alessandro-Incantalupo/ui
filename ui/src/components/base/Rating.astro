---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'
import Icon from './Icon.astro'

type Props<As extends HTMLTag = 'div'> = Polymorphic<{ as: As }> & {
  color?: 'base' | 'brand'
  value?: number
  size?: string
  compact?: boolean
}

const { size, compact, value = 5, ...rest } = Astro.props

const getIcon = (count: number) => {
  const difference = value - count
  if (difference >= -0.25) return 'star-filled'
  if (difference >= -0.75) return 'star-half-filled'
  return 'star'
}
---

<Component
  class:list={['rating']}
  {...rest}
>
  {
    [1, 2, 3, 4, 5].map((_, i) => (
      <>
        <Icon
          size={size}
          compact={compact}
          name={getIcon(i + 1)}
          class:list={'rating-icon-solid'}
        />
      </>
    ))
  }
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('rating') {
    display: inline-flex;
    position: relative;
    gap: var(--space-2);
  }
</style>
