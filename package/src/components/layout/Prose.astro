---
import { z } from 'zod'
import { componentSchema } from '../../schemas/componentSchema'
import Children from '../utility/Children.astro'
import Tag from '../utility/Tag.astro'

type Props = z.infer<typeof proseSchema>

export const proseSchema = componentSchema({})

const { as = 'article', render, ...rest } = proseSchema.parse(Astro.props)
---

<Tag
  class:list={['full-prose']}
  {...rest}
>
  <slot name="before" />
  <slot>
    <Children {...rest} />
  </slot>
  <slot name="after" />
</Tag>

<style is:global>
  .full-prose {
    column-gap: var(--space-5);
    order: 3;
    column-width: 500px;
    column-count: auto;
    text-align: left;

    * {
      align-items: flex-start;

      margin-bottom: 0.5em;
      color: var(--sand12);
      font-size: var(--text-2);
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      /* FIXME */
      color: var(--hue12);
      font-weight: 700;
      font-size: var(--text-3);
      line-height: 1.25;
    }

    h1 {
      font-size: var(--text-3);
    }
    h2 {
      font-size: var(--text-3);
    }
    h3 {
      font-size: var(--text-4);
    }
    h4 {
      font-size: var(--text-3);
    }
    h5 {
      font-size: var(--text-2);
    }
    h6 {
      font-size: var(--text-1);
    }

    :is(h1, h2, h3, h4, h5, h6) {
      --color: var(--hue12);

      margin-top: 2em;
      margin-bottom: 0.5em;
      color: var(--color);
    }

    :is(h1, h2, h3, h4, h5, h6):first-child {
      margin-top: 0;
    }

    * {
      break-inside: avoid-column;
    }

    ul {
      padding-left: 1.5em;
      list-style: disc;
    }
  }
</style>
