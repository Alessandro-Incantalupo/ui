---
import type { ComponentProps, HTMLTag } from 'astro/types'
import Children from '../utility/Children.astro'
import Tag from '../utility/Tag.astro'

type Props<As extends HTMLTag = 'header'> = ComponentProps<typeof Tag<As>> &
  ComponentProps<typeof Children> & {
    frame?: 'screen' | 'panel'
    variant?: 'bordered' | 'subtle'
    position?: 'relative' | 'sticky' | 'fixed' | 'absolute'
  }

const { as = 'header', variant, position, frame, ...rest } = Astro.props
---

<Tag
  class:list={['full-header', variant, position, frame]}
  compact
  {as}
  {...rest}
>
  <slot name="before" />
  <Children {...rest} />
  <slot />
</Tag>

<style is:global>
  .full-header {
    display: flex;
    top: 0;
    right: 0;
    left: 0;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--full-color-background);
    padding: var(--full-space-3) var(--full-space-gutter);

    &.fixed {
      position: fixed;
    }

    &.absolute {
      position: absolute;
    }

    &.sticky {
      position: sticky;
    }

    &.subtle {
      border-color: var(--color-6);
      background-color: var(--color-2);
    }

    &.bordered {
      border-bottom: 1px solid var(--full-color-border);
    }
  }
</style>
