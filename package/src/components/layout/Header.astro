---
import type { ComponentProps, HTMLTag } from 'astro/types'
import Children from '../utility/Children.astro'
import Tag from '../utility/Tag.astro'

type Props<As extends HTMLTag = 'header'> = ComponentProps<typeof Tag<As>> &
  ComponentProps<typeof Children> & {
    frame?: 'screen' | 'panel'
    variant?: 'solid' | 'soft' | 'ghost'
    position?: 'relative' | 'sticky' | 'fixed' | 'absolute'
  }

const { as = 'header', variant, position, frame, ...rest } = Astro.props
---

<Tag
  class:list={['full-header', variant, position, frame]}
  compact
  {as}
  {...rest}
>
  <slot name="before" />
  <slot>
    <Children {...rest} />
  </slot>
  <slot name="after" />
</Tag>

<style is:global>
  .full-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--color-1);
    padding: var(--space-2) var(--gutter);

    &.fixed {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
    }
  }
</style>
