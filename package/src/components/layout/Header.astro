---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Layout from './_Layout.astro'

type Props<As extends HTMLTag = 'header'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Layout> & {
    frame?: 'screen' | 'panel'
    position?: 'relative' | 'sticky' | 'fixed' | 'absolute'
  }

const {
  as = 'header',
  layout = 'row',
  y = 'center',
  density = 'compact',
  variant,
  position,
  frame,
  ...rest
} = Astro.props
---

<Layout
  class:list={[
    'full-header',
    {
      [`full-frame-${frame}`]: frame,
      [`full-position-${position}`]: position,
    },
  ]}
  {as}
  {layout}
  {y}
  {density}
  {...rest}
>
  <slot name="before" />
  <slot />
</Layout>

<style is:global lang="scss">
  .full-header {
    display: flex;
    top: 0;
    right: 0;
    left: 0;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--background);
    padding: var(--space-3) var(--space-gutter);
    width: 100%;

    &.full-position-fixed {
      position: fixed;
    }

    &.full-position-absolute {
      position: absolute;
    }

    &.full-position-sticky {
      position: sticky;
    }

    &.subtle {
      border-color: var(--6);
      background-color: var(--2);
    }

    &.bordered {
      border-bottom: 1px solid var(--border);
    }
  }
</style>
