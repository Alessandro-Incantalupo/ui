<!-- ---
import { z } from 'zod'
import { buildProps,parseProps } from '../utils/props'
import ButtonGroup,{ buttonGroupSchema } from './ButtonGroup.astro'
import ChannelGroup,{ channelGroupSchema } from './ChannelGroup.astro'
import Description,{ descriptionSchema } from './Description.astro'
import Display from './Display.astro'
import LinkGroup,{ linkGroupSchema } from './LinkGroup.astro'
import Logo,{ logoSchema } from './Logo.astro'
import Section from './Section.astro'
import SpecGroup,{ specGroupSchema } from './SpecGroup.astro'
import Title,{ titleSchema } from './Title.astro'

type Props = z.infer<typeof footerSchema>

export const footerSchema = buildProps({
  logo: logoSchema,
  description: descriptionSchema,
  channelGroup: channelGroupSchema,
  buttonGroup: buttonGroupSchema,
  columns: z.array(
    z.object({
      title: titleSchema,
      specGroup: specGroupSchema.optional(),
      linkGroup: linkGroupSchema.optional(),
    })
  ),
})

const { as = 'footer', ...rest } = parseProps(footerSchema, Astro.props)
---

<Section
  direction={'row'}
  align={'start'}
  class:list={['footer']}
  compact
  {as}
  {...rest}
>
  <div class="part first">
    <Display class={'about-footer'}>
      <Logo {...rest.logo} />
      <Description {...rest.description} />
      <ButtonGroup {...rest.buttonGroup} />
    </Display>
    <Display>
      <ChannelGroup {...rest.channelGroup} />
    </Display>
  </div>
  <div class="part second">
    {
      rest?.columns?.map((column) => (
        <Display class={'col'}>
          <Title {...column.title} />
          <LinkGroup
            direction={'column'}
            {...column.linkGroup}
          />
          <SpecGroup {...column.specGroup} />
        </Display>
      ))
    }
  </div>
</Section>

<style is:global>
  .footer {
    gap: var(--spacer) var(--space-6);
    .part {
      display: flex;
      flex-direction: column;
      gap: var(--space-6);

      .about-footer {
        max-width: 400px;
      }

      @media (min-width: 768px) {
        flex-direction: row;
      }
    }

    .link-group {
      flex-direction: column;
      align-items: start;
      gap: var(--space-2);
    }

    .col {
      width: 100%;
    }
    .spec-group {
      .full-icon {
        display: none !important;
      }

      .spec {
        color: var(--sand11);

        b {
          display: inline-block;
          width: var(--space-5);
        }
      }
    }
  }
</style> -->
