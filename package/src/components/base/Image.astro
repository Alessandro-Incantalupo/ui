---
import type { ComponentProps } from 'astro/types'
import { Image as AstroImage } from 'astro:assets'
import Tag from '../_Tag.astro'

type Props<As> = ComponentProps<typeof Tag> & {
  position?: 'background' | 'cover' | 'panel'
  // frame?: 'mask' | 'mask-sm'
}

function getAltBySrc(): string {
  const filename = Astro.props.src?.split('/').pop()
  const slug = filename && filename.split('.')[0]
  const unslugged = slug?.replace(/-/g, ' ')
  return unslugged || ''
}

const {
  alt = getAltBySrc(),
  src,
  position,
  inferSize = inferSizes(),
  frame,
  ...rest
} = Astro.props

// TODO use astro glob for local import of image and infer sizes. | @jeremybosma

function inferSizes() {
  if (src?.startsWith('https')) return '{true}'
}

// function getSrc() {
//   if (src?.startsWith('http')) return src
//   // TODO: add eager import
//   const images = import.meta.glob('/src/assets/**/*.{jpeg,jpg,png,webp,gif}', {
//     eager: true,
//   })
//   const path = ('/src/assets/' + src).replace('//', '/')
//   const image = images[path]
//   if (!image) console.warn(`Image not found: ${path}`)
//   else return image
// }
---

{
  src && (
    <AstroImage
      class:list={[
        'full-image',
        {
          [`full-position-${position}`]: position,
        },
      ]}
      if={src}
      {src}
      {inferSize}
      {alt}
      {...rest}
    />
  )
}

<style is:global lang="less">
  @layer components {
    .full-image {
      display: block;
      border-radius: var(--full-border-radius-1);
      height: auto;
      object-fit: cover;

      &.full-position-background {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        order: 1;
        z-index: 0;

        /* TODO manier fixen zodat dit met custom classes kan */
        border-radius: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;

        ~ .full-tag {
          position: relative;
          z-index: 1;
        }
      }

      &.cover {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      &.panel {
        height: 100%;
        object-fit: cover;
      }

      &.mask-sm {
        -webkit-mask-image: linear-gradient(to top, transparent 0%, black 30%);
        mask-image: linear-gradient(to top, transparent 0%, black 30%);
      }

      &.mask {
        -webkit-mask-image: linear-gradient(to top, transparent 0%, black 100%);
        mask-image: linear-gradient(to top, transparent 0%, black 100%);
      }
    }
  }
</style>
