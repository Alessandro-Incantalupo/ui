---
import type { ComponentProps, HTMLTag } from 'astro/types'
import Children from '../utility/Children.astro'
import Tag from '../utility/Tag.astro'

type Props<As extends HTMLTag = 'a'> = ComponentProps<typeof Tag<As>> &
  ComponentProps<typeof Children> & {
    variant?: 'primary' | 'secondary' | 'outline' | 'ghost'
  }

const { as = 'a', variant = 'primary', ...rest } = Astro.props
---

<Tag
  class:list={[
    'full-button',
    {
      [`full-color-${variant}`]: variant,
    },
  ]}
  {as}
  {...rest}
>
  <slot name="before" />
  <Children {...rest} />
  <slot />
</Tag>

<style is:global>
  .full-button {
    display: inline-flex;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    vertical-align: top;
    gap: var(--full-space-2);
    transition: var(--full-transition);
    cursor: pointer;
    outline: none !important;
    border: var(--full-border-width) solid var(--full-color-border);
    border-radius: var(--full-border-radius-2);
    background-color: var(--full-color-background);
    padding-right: var(--full-element-2);
    padding-left: var(--full-element-2);
    height: calc(var(--full-text-1) + 2 * var(--full-element-2));
    color: var(--full-color-foreground);
    font-weight: var(--full-button-font-weight);
    font-size: var(--full-text-1);
    line-height: 1.625;
    font-family: var(--full-button-font-family);
    user-select: none;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;

    &:hover {
      background-color: color-mix(
        in hsl,
        var(--full-color-background) 40%,
        var(--full-color-background) 40%
      );
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    &:focus-visible {
      outline: 2px solid var(--color-8) !important;
      outline-offset: 2px;
    }

    &.full-color-primary {
      &:hover {
        background-color: color-mix(
          in hsl,
          var(--full-color-background) 45%,
          var(--full-color-background) 45%
        );
      }
    }

    &.full-color-bordered,
    &.full-color-ghost {
      background: transparent;

      &:hover {
        background-color: color-mix(
          in hsl,
          var(--full-secondary-background) 20%,
          var(--full-secondary-background) 20%
        );
      }
    }

    &.full-color-base {
      border-color: transparent;
    }

    /* &.full-size-sm {
      padding: 0 12px;
      height: 40px;
      font-size: 14px;
    }

    &.full-size-md {
      padding: 0 16px;
      height: 48px;
      font-size: 16px;
    }

    &.full-size-lg {
      padding: 0 24px;
      height: 56px;
      font-size: 16px;
    } */
  }
</style>
