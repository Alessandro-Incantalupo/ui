---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'
import Avatar from './Avatar.astro'
import Icon from './Icon.astro'

type Props<As extends HTMLTag = 'a'> = Polymorphic<{ as: As }> & {
  variant?: 'solid' | 'soft' | 'surface' | 'outline' | 'ghost' | 'link'
  size?: 'sm' | 'md' | 'lg'
  color?: 'base' | 'brand'
  radius?: 'none' | 'auto' | 'full'
  contrast?: boolean
  html?: string
  text?: string
  icon?: string
  label?: string
  avatar?: string
}

const {
  as = 'a',
  variant = 'solid',
  radius = 'auto',
  contrast,
  icon,
  label,
  avatar,
  ...rest
} = Astro.props
---

<Component
  class:list={['button']}
  {as}
  {variant}
  {contrast}
  {radius}
  {...rest}
>
  <slot />
  <Icon name={icon} />
  <Avatar src={avatar} />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('button') {
    display: inline-flex;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    vertical-align: top;
    gap: var(--space-2);
    transition: background-color var(--transition);
    cursor: pointer;
    outline: none !important;
    border: 1px solid var(--border);
    background-color: var(--background);
    padding-right: var(--space-4);
    padding-left: var(--space-4);
    height: calc(var(--text-1) + 2 * var(--space-4));
    color: var(--text);
    font-weight: var(--button-font-weight);
    font-size: var(--text-1);
    line-height: 1.625;
    font-family: var(--button-font-family);
    text-align: center;
    text-decoration: none;
    white-space: nowrap;

    &:hover {
      background-color: var(--background-hover);
    }

    &:active {
      background-color: var(--background-active);
    }

    .avatar {
      margin-right: calc(-1 * (var(--space-4)));
      margin-left: var(--space-1);
      padding: calc(var(--space-1) / 3);
      width: calc(var(--text-1) + 2 * var(--space-4)) !important;
      height: calc(var(--text-1) + 2 * var(--space-4)) !important;
    }

    &:focus-visible {
      outline: 2px solid var(--focus) !important;
      outline-offset: 2px;
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    &.variant-link {
      box-shadow: none;
      border-color: transparent;
      background-color: transparent;
      padding: 0;
      height: auto;

      &:hover {
        color: var(--colo-12);
      }
    }

    &.radius-none {
      border-radius: 0;
    }

    &.radius-auto {
      border-radius: var(--radius-1);
    }

    &.radius-full {
      border-radius: 9999px;
    }
  }
</style>
