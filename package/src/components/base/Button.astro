---
import type { ComponentProps, HTMLTag } from 'astro/types'
import Children from '../utility/Children.astro'
import Tag from '../utility/Tag.astro'

type Props<As extends HTMLTag = 'a'> = ComponentProps<typeof Tag<As>> &
  ComponentProps<typeof Children> & {
    // variant?: 'solid' | 'soft' | 'surface' | 'outline' | 'ghost'
    variant?: 'primary' | 'secondary' | 'outline' | 'ghost'
  }

const { as = 'a', variant = 'primary', ...rest } = Astro.props
---

<Tag
  class:list={['full-button', variant]}
  {as}
  {...rest}
>
  <slot name="before" />
  <Children {...rest} />
  <slot />
  <slot name="after" />
</Tag>

<style is:global>
  .full-button {
    display: inline-flex;
    flex-shrink: 0;
    justify-content: center;
    align-items: center;
    vertical-align: top;
    gap: var(--space-2);
    cursor: pointer;
    outline: none !important;
    border-radius: var(--radius-2);
    padding: 0 var(--element-1);
    min-width: var(--element-2);
    height: var(--element-2);
    font: var(--font-button);
    font: var(--text-1);
    line-height: 1;
    user-select: none;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;
    background: var(--full-background);
    color: var(--full-foreground);

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    &:focus-visible {
      outline: 2px solid var(--color-8) !important;
      outline-offset: 2px;
    }
  }
</style>
