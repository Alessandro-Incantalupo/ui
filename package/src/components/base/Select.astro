---
import type { ComponentProps, Polymorphic } from 'astro/types'
import { isObject } from 'radash'
import Tag from '../_Tag.astro'
import Icon from './Icon.astro'
import SelectOption from './SelectOption.astro'

type Props<As extends 'select'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    options?: (ComponentProps<typeof SelectOption> | string)[]
  }

const { options, ...rest } = Astro.props
---

<Tag
  as="div"
  class="full-select-wrapper"
  {...rest}
>
  <Tag
    as="select"
    if={options}
    class:list={['full-select full-input']}
    {...rest}
  >
    <slot name="before" />
    {
      options?.map((option: any) => {
        if (isObject(option)) return <SelectOption {...option} />
        else return <SelectOption text={option} />
      })
    }
    <slot />
  </Tag>
  <div class="full-select-icon-wrapper">
    <Icon
      class="full-select-icon"
      name="chevron-down"
    />
  </div>
</Tag>

<style is:global lang="scss">
  .full-select {
    appearance: none;
  }

  .full-select-wrapper {
    position: relative;
    width: 100%;
  }

  .full-select-icon-wrapper {
    display: flex;
    position: absolute;
    top: 0;
    right: var(--space-element-2);
    align-items: center;
    margin: 0 !important;
    padding: 0;
    height: 100%;
    pointer-events: none;
  }
</style>
