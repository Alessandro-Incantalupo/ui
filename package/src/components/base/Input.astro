---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Tag from '../_Tag.astro'

type Props<As extends HTMLTag = 'input'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    variant?: 'outline'
  }

const { as = 'input', variant = 'outline', ...rest } = Astro.props
---

<Tag
  class:list={['input']}
  if={true}
  {as}
  {variant}
  {...rest}
/>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('input') {
    display: flex;
    position: relative;
    align-items: center;
    outline: none;
    box-shadow: inset 0 0 0 var(--border-width) var(--border);
    border: 0px;
    border-radius: var(--radius-1);
    background-color: var(--input-background);
    padding: var(--element-2);
    width: 100%;
    min-width: var(--element-2);
    height: calc(var(--label) + 2 * var(--element-3));
    color: var(--foreground);
    font-weight: var(--font-weight);
    font-size: var(--label);
    line-height: 1.25;
    font-family: var(--font-family);

    &:focus {
      outline: none;
      box-shadow: inset 0 0 0 2px var(--focus);
    }

    &:disabled {
      opacity: 50%;
      cursor: not-allowed;
      pointer-events: none;
    }
  }
</style>
