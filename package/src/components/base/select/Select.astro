---
import type {
  ComponentProps,
  HTMLAttributes,
  HTMLTag,
  Polymorphic,
} from 'astro/types'
import Component from '../../_Component.astro'
import Label from '../../typography/Label.astro'
import Icon from '../Icon.astro'
import { default as SelectElement } from './SelectElement.astro'
import SelectOption from './SelectOption.astro'

type Props<As extends HTMLTag = 'div'> = Polymorphic<{ as: As }> &
  Pick<ComponentProps<typeof SelectElement>, 'name' | 'required' | 'disabled'> &
  HTMLAttributes<'select'> & {
    color?: 'base' | 'brand'
    label?: string
    placeholder?: string
    options?: string[]
    value?: string
  }

const {
  as = 'div',
  label,
  placeholder,
  options,
  value,
  // select attributes
  name,
  required,
  disabled,
  ...rest
} = Astro.props
---

<Component
  class:list={['select']}
  {as}
  {...rest}
>
  <Label
    for={name}
    text={label}
  />
  <SelectElement
    id={name}
    {name}
    {required}
    {disabled}
  >
    <SelectOption
      text={placeholder}
      disabled
      selected
    />
    {
      options?.map((option: any) => (
        <SelectOption
          selected={value === option}
          text={option}
          value={option}
        />
      ))
    }
    <slot />
  </SelectElement>
  <Icon name="chevron-down" />
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('select') {
    display: flex;
    position: relative;
    flex-direction: column;
    gap: var(--space-1);
    width: 100%;

    .icon {
      position: absolute;
      right: var(--space-4);
      bottom: var(--space-4);
      width: var(--text-1);
      height: var(--text-1);
    }
  }
</style>
