---
// TODO clean up the styling. Since before every component in Fullui was just one element, we should decide how we are going to handle situation like this where extra elements are needed.
// I think we should split it up into multiple components, like SelectIcon etc. gr Sil
import type { ComponentProps, Polymorphic } from 'astro/types'
import { isObject } from 'radash'
import Component from '../../_Component.astro'
import Icon from '../Icon.astro'
import SelectOption from '../select/SelectOption.astro'
import SelectLabel from './SelectLabel.astro'
import SelectField from './SelectField.astro'
import SelectControl from './SelectControl.astro'
import SelectIcon from './SelectIcon.astro'
import SelectPlaceholder from './SelectPlaceholder.astro'

type Props<As extends 'select'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    options?: (ComponentProps<typeof SelectOption> | string)[]
  }

const { as = 'select', options, ...rest } = Astro.props
---

<Component
  as="div"
  class:list="select-wrapper"
  {...rest}
>
  <SelectLabel></SelectLabel>
  <SelectField>
    <SelectControl>
      <SelectPlaceholder></SelectPlaceholder>
      {options.map(option => ( 
        typeof option === 'string' ? <SelectOption text={option} /> : <SelectOption {...option}  />
      ))}
    </SelectControl>
    <SelectIcon></SelectIcon>
  </SelectField>
</Component>

<!-- <Component
  as="div"
  class:list="select-wrapper"
  {...rest}
>
  <Component
    as="select"
    if={options}
    class:list={['select input']}
    {...rest}
  >
    <slot name="before" />
    {
      options?.map((option: any) => {
        if (isObject(option)) return <SelectOption {...option} />
        else return <SelectOption text={option} />
      })
    }
    <slot />
  </Component>
  <div class="select-icon-wrapper">
    <Icon
      class="select-icon"
      name="chevron-down"
    />
  </div>
</Component> -->

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('select') {
    appearance: none;
  }

  .select-icon-wrapper {
    display: flex;
    position: absolute;
    top: 0;
    right: var(--element-2);
    align-items: center;
    margin: 0 !important;
    padding: 0;
    height: 100%;
    pointer-events: none;
  }

  .full.select-wrapper {
    position: relative;
    width: 100%;
  }
</style>
