---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../../_Component.astro'
import TableHead from './TableHead.astro'
import TableRow from './TableRow.astro'

type Props<As extends HTMLTag = 'thead'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    rows?: (
      | ComponentProps<typeof TableHead>
      | ComponentProps<typeof TableHead>['html']
    )[]
  }

const { as = 'thead', rows, ...rest } = Astro.props
---

<Component
  class:list={['table-header']}
  {as}
  {...rest}
>
  {
    rows && (
      <TableRow>
        {rows?.map((row) => {
          if (typeof row === 'string') return <TableHead html={row} />
          else return <TableHead {...row} />
        })}
      </TableRow>
    )
  }
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('table-header') {
    border-bottom: 1px solid var(--base-border);
  }
</style>
