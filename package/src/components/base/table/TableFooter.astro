---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../../_Component.astro'
import TableCell from './TableCell.astro'
import TableRow from './TableRow.astro'

type Props<As extends HTMLTag = 'td'> = Polymorphic<{ as: As }> & {
  cells?: (ComponentProps<typeof TableCell> | string)[]
}

const { as = 'tfoot', cells, ...rest } = Astro.props
---

<Component
  class:list={['table-footer']}
  {as}
  {...rest}
>
  {
    cells && (
      <TableRow>
        {cells?.map((cell) => {
          if (typeof cell === 'string') return <TableCell set:html={cell} />
          else return <TableCell {...cell} />
        })}
      </TableRow>
    )
  }
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('table-footer') {
    display: table-footer-group;
    border-bottom: 1px solid var(--base-border);
    background-color: var(--background-soft);
    color: var(--foreground-contrast);

    &:last-child {
      border-bottom: none;
    }
  }
</style>
