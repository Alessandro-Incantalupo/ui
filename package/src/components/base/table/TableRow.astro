---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../../_Component.astro'
import TableCell from './TableCell.astro'

type Props<As extends HTMLTag = 'tr'> = Polymorphic<{ as: As }> & {
  cells?: (
    | ComponentProps<typeof TableCell>
    | ComponentProps<typeof TableCell>['html']
  )[]
}

const { as = 'tr', cells, ...rest } = Astro.props
---

<Component
  class:list={['table-row']}
  {...rest}
  {as}
>
  {
    cells?.map((cel) => {
      if (typeof cel === 'string') return <TableCell set:html={cel} />
      else return <TableCell {...cel} />
    })
  }
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('table-row') {
    border-bottom: 1px solid var(--base-border);
    background-color: var(--background-subtle);

    &:is(.table-header > &),
    &:is(.table-footer > &) {
      background-color: var(--background-soft);
    }

    &:last-child {
      border-bottom: none;
    }
  }
</style>
