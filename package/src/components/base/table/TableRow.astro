---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../../_Component.astro'
import TableCell from './TableCell.astro'

type Props<As extends HTMLTag = 'tr'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    rows?: (
      | ComponentProps<typeof TableCell>
      | ComponentProps<typeof TableCell>['html']
    )[]
  }

const { as = 'tr', rows, ...rest } = Astro.props
---

<Component
  class:list={['table-row']}
  {...rest}
  {as}
>
  {
    rows?.map((row) => {
      if (typeof row === 'string') return <TableCell html={row} />
      else return <TableCell {...row} />
    })
  }
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../../css/utils.scss';

  @include component('table-row') {
    border-bottom: 1px solid var(--base-border);

    .table-cell:last-child {
      text-align: right;
    }
  }
</style>
