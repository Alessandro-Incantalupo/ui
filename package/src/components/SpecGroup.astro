---
import { z } from 'zod';
import { componentSchema } from '../schemas/componentSchema';
import Spec, { specSchema } from './Spec.astro';
import Component from './misc/Component.astro';

type Props = z.infer<typeof specGroupSchema>;

export const specGroupSchema = componentSchema({
  specs: z.array(specSchema.or(specSchema.shape.html)),
});

const { specs, ...rest } = specGroupSchema.parse(Astro.props);
---

<Component
  class:list={['specs']}
  {...rest}
>
  <slot>
    {
      specs?.map((item) => {
        if (typeof item === 'string') return <Spec html={item} />;
        else return <Spec {...item} />;
      })
    }
  </slot>
</Component>

<style is:global>
  .specs {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }
</style>
