---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Button, { buttonSchema } from './Button.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof buttonGroupSchema>

export const buttonGroupSchema = buildProps({
  button: buttonSchema,
  buttons: z.array(buttonSchema).nullish(),
})

const a = ['solid', 'soft', 'ghost'] as const

const { buttons, ...rest } = parseProps(buttonGroupSchema, Astro.props)
---

<Tag
  class="button-group"
  {...rest}
>
  {
    buttons?.map((item, i) => (
      <Button
        variant={a[i]}
        {...rest.button}
        {...item}
      />
    ))
  }
  <slot />
</Tag>

<style is:global>
  .button-group {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-2);
  }
</style>
