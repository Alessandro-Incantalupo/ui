---
import { z } from 'zod';
import { componentSchema } from '../schemas/componentSchema';
import Button, { buttonSchema } from './Button.astro';
import Component from './misc/Component.astro';

type Props = z.infer<typeof buttonGroupSchema>;

export const buttonGroupSchema = componentSchema({
  button: buttonSchema,
  buttons: z.array(buttonSchema),
});

const { buttons, ...rest } = buttonGroupSchema.parse(Astro.props);
---

<Component
  class="button-group"
  {...rest}
>
  {
    buttons?.map((item, i) => (
      <Button
        variant={i == 1 ? 'soft' : undefined}
        {...rest.button}
        {...item}
      />
    ))
  }
  <slot />
</Component>

<style is:global>
  .button-group {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-2);
  }
</style>
