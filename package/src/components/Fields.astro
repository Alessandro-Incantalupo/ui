---
import { z } from 'astro:content'
import { morph } from '../utils'
import Field, { macro as fieldSchema } from './Field.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph('fields', {
  field: fieldSchema.shape.field,
  _field: fieldSchema.shape._field,
  fields: z.array(fieldSchema).nullish(),
})

const { fields, field, _field, ...rest } = meso(Astro.props)
---

<Tag
  class:list={['fields']}
  {...rest}
>
  {
    fields?.map((item) => (
      <Field
        {_field}
        {field}
        {...item}
      />
    ))
  }
</Tag>

<style is:global>
  .fields {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }
</style>
