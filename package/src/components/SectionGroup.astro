---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Section, { sectionSchema } from './Section.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof sectionGroupSchema>

export const sectionGroupSchema = buildProps({
  section: sectionSchema,
  sections: z.array(sectionSchema).nullish(),
})

const {
  as = 'main',
  sections,
  ...rest
} = parseProps(sectionGroupSchema, Astro.props)
---

<Tag
  class="sections"
  {as}
  {...rest}
>
  <slot name="before" />
  {
    sections?.map((item, i) => (
      <>
        <Section
          {...rest.section}
          {...item}
        />
        {i == 1 && <the-fold />}
      </>
    ))
  }
  <slot name="after" />
</Tag>

<style is:global>
  .sections {
    display: flex;
    flex-direction: column;
  }
</style>
