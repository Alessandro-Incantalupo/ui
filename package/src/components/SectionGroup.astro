---
import { z } from 'zod'
import { componentSchema } from '../schemas/componentSchema'
import Section, { sectionSchema } from './Section.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof sectionGroupSchema>

export const sectionGroupSchema = componentSchema({
  section: sectionSchema,
  sections: z.array(sectionSchema).nullish(),
})

const { as = 'main', sections, ...rest } = sectionGroupSchema.parse(Astro.props)
---

<Tag
  class="sections"
  {as}
  {...rest}
>
  <slot name="before" />
  {
    sections?.map((item) => (
      <Section
        {...rest.section}
        {...item}
      />
    ))
  }
  <slot name="after" />
</Tag>

<style is:global>
  .sections {
    display: flex;
    flex-direction: column;
  }
</style>
