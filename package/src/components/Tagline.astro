---
// import type { ComponentProps } from 'astro/types'
// import { endomorphic, type Endomorphic } from '../utils'
// import Tag from './Tag.astro'

// interface Props
//   extends Endomorphic<Props, 'tagline', string>,
//     ComponentProps<typeof Tag> {}

import { z } from 'astro:content'
import { ectomorphic, endomorphic } from '../utils'
import Tag, { zTag } from './Tag.astro'

export const zTagline = endomorphic(
  'tagline',
  zTag.extend({
    tagline: z.string().nullish(),
  })
)

type Props = z.infer<typeof zTagline>

const {
  as = 'p',
  tagline,
  ...rest
} = ectomorphic('tagline', zTagline, Astro.props)
---

<Tag
  class:list={['tagline']}
  {as}
  {...rest}
>
  <Fragment set:html={tagline} />
  <slot />
</Tag>

<style is:global>
  .tagline {
    color: var(--hue11);
    font: var(--font);
    font-size: var(--text-1);
    line-height: 1.25;

    &.contrast {
      color: var(--hue12);
    }
  }
</style>
