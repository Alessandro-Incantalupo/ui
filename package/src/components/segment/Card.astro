---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'a'> = Polymorphic<{ as: As }> & {
  structure?: 'column' | 'group' | 'split' | 'spread' | 'row'
  align?: 'start' | 'center' | 'end' | 'stretch'
  frame?: 'panel' | 'none'
  color?: 'base' | 'brand'
  contrast?: boolean
  ratio?: 'landscape' | 'portrait' | 'square' | number
  variant?:
    | 'ghost'
    | 'subtle'
    | 'surface'
    | 'outline'
    | 'soft'
    | 'surface'
    | 'solid'
}

const {
  href,
  as = href ? 'a' : 'div',
  frame = 'panel',
  structure = 'column',
  compact = true,
  variant = 'subtle',
  ...rest
} = Astro.props
---

<Component
  class:list={['card']}
  {compact}
  {href}
  {structure}
  {variant}
  {frame}
  {as}
  {...rest}
>
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('card') {
    position: relative;
    overflow: hidden;
    text-decoration: none;

    &[href] {
      cursor: pointer;

      > .full.image {
        transition: var(--transition);
      }

      &:hover {
        > .full.image {
          opacity: 0.85;
        }
      }
    }

    &.ratio-landscape {
      aspect-ratio: 4/3;
    }

    &.ratio-square {
      aspect-ratio: 1/1;
    }

    &.ratio-portrait {
      aspect-ratio: 3/4;
    }

    &.frame-panel {
      --inner-x: var(--space-7);
      --inner-y: var(--space-7);

      border: 1px solid var(--border);
      border-radius: var(--radius-3);
      background-color: var(--background);
      padding: var(--inner-y) var(--inner-x);
    }
  }
</style>
