---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'header'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    structure?: 'spread' | 'row' | 'column'
    position?: 'relative' | 'sticky' | 'fixed' | 'absolute'
    variant?: 'ghost' | 'subtle' | 'soft' | 'surface' | 'outline' | 'solid'
    frame?: 'fill' | 'panel'
    align?: 'start' | 'center' | 'end'
  }

const {
  as = 'header',
  structure = 'spread',
  frame = 'fill',
  variant = 'subtle',
  compact = true,
  ...rest
} = Astro.props
---

<Component
  class:list={['header']}
  {as}
  {frame}
  {compact}
  {variant}
  {...rest}
>
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('header') {
    --screen: 1536px;
    --gutter: max(4vw, calc(100vw - var(--screen)) / 2);

    display: flex;
    top: 0;
    right: 0;
    left: 0;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    border-bottom: 1px solid var(--border);
    background-color: var(--background);
    padding-top: var(--space-4);
    padding-bottom: var(--space-4);
    width: 100%;

    &.frame-fill {
      padding-top: var(--space-4);
      padding-right: var(--gutter);
      padding-bottom: var(--space-4);
      padding-left: var(--gutter);
    }

    &.frame-panel {
      margin-right: var(--gutter);
      margin-left: var(--gutter);
      border-radius: var(--radius-3);
      padding-right: var(--space-4);
      padding-left: var(--space-4);
    }

    &.position-fixed {
      position: fixed;
    }

    &.position-absolute {
      position: absolute;
    }

    &.position-sticky {
      position: sticky;
    }
  }
</style>
