---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Tag from '../_Tag.astro'

type Props<As extends HTMLTag = 'header'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    structure?: 'spread' | 'group' | 'stack'
    position?: 'relative' | 'sticky' | 'fixed' | 'absolute'
    variant?: 'base' | 'raised'
    frame?: 'wrapper' | 'container' | 'panel'
    align?: 'start' | 'center' | 'end'
  }

const {
  as = 'header',
  structure = 'spread',
  density = 'compact',
  frame = 'wrapper',
  ...rest
} = Astro.props
---

<Tag
  class:list={['header']}
  {as}
  {density}
  {frame}
  {...rest}
>
  <slot />
</Tag>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('header') {
    --inner: var(--element-3);

    display: flex;
    top: 0;
    right: 0;
    left: 0;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--background);
    width: 100%;

    // &.panel {
    //   margin-top: var(--inner);
    // }

    &.position-fixed {
      position: fixed;
    }

    &.position-absolute {
      position: absolute;
    }

    &.position-sticky {
      position: sticky;
    }
  }
</style>
