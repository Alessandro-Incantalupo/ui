---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'section'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    scheme?: 'light' | 'dark'
    color?: 'base' | 'brand'
    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
    compact?: boolean
    frame?: 'fill' | 'viewport' | 'contain' | 'panel'
    variant?: 'ghost' | 'subtle' | 'outline' | 'soft' | 'solid' | 'surface'
    align?: 'start' | 'center' | 'end'
    structure?: 'column' | 'split' | 'spread' | 'row'
  }

const {
  as = 'div',
  frame = 'fill',
  structure = 'column',
  variant = 'ghost',
  align = 'start',
  ...rest
} = Astro.props
---

<Component
  class:list={['section']}
  {as}
  {frame}
  {variant}
  {align}
  {structure}
  {...rest}
>
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('section') {
    --screen: 1536px;
    --gutter: max(4vw, calc(100vw - var(--screen)) / 2);

    position: relative;
    margin: var(--outer-y) var(--outer-x);
    background-color: var(--background);
    padding: var(--inner-y) var(--inner-x);
    width: 100%;
    max-width: calc(100% - (2 * var(--outer-x)));

    &.frame-fill {
      --inner-x: var(--gutter);
      --outer-x: 0;
      --inner-y: var(--space-7);
      --outer-y: 0;
    }

    &.frame-viewport {
      --inner-x: var(--gutter);
      --outer-x: 0;
      --inner-y: var(--space-7);
      --outer-y: 0;

      min-height: 100vh;
    }

    &.frame-contain {
      --inner-x: max(4vw, var(--space-7));
      --outer-x: max(0px, calc(var(--gutter) - var(--inner-x)));
      --inner-y: var(--space-7);
      --outer-y: 0;
    }

    &.frame-panel {
      --inner-x: min(4vw, var(--space-7));
      --outer-x: var(--gutter);
      --inner-y: var(--space-7);
      --outer-y: var(--space-7);

      border: 1px solid var(--border);
      border-radius: var(--radius-3);
    }

    &.align-start {
      align-items: flex-start;
    }

    &.align-center {
      align-items: center;
      text-align: center;

      & > * > * {
        text-align: left;
      }
    }

    &.align-end {
      align-items: flex-end;
    }
  }
</style>
