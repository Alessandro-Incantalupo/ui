---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Component from '../_Component.astro'

type Props<As extends HTMLTag = 'section'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Component> & {
    scheme?: 'light' | 'dark'
    color?: 'base' | 'brand' | string
    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl'
    compact?: boolean
    frame?: 'container' | 'wrapper' | 'panel' | 'viewport' | 'none'
    variant?: 'fill' | 'subtle' | 'outline' | 'soft' | 'solid' | 'surface'
    align?: 'start' | 'center' | 'end' | 'stretch'
    structure?:
      | 'row'
      | 'column'
      | 'split'
      | 'spread'
      | 'grid'
      | 'bento'
      | 'masonry'
      | 'carousel'
  }

const {
  frame = 'wrapper',
  structure = 'column',
  variant = frame === 'panel' ? 'subtle' : 'fill',
  as = 'div',
  ...rest
} = Astro.props
---

<Component
  class:list={['section']}
  {as}
  {frame}
  {variant}
  {structure}
  {...rest}
>
  <slot />
</Component>

<style is:global lang="scss">
  @import '../../css/utils.scss';
  @import '../../css/color.css';
  @import '../../css/props/frame.scss';
  @import '../../css/props/variant.scss';
  @import '../../css/props/structure.scss';
  @import '../../css/props/align.scss';

  @include component('section') {
    --inner: var(--space-6);

    padding-top: var(--inner);
    padding-bottom: var(--inner);

    &.frame-panel {
      margin-top: var(--space-6);
      margin-bottom: var(--space-6);
    }

    &:not(.frame-panel) {
      box-shadow: none !important;
    }
  }
</style>
