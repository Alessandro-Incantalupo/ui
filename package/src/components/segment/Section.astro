---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Tag from '../_Tag.astro'

type Props<As extends HTMLTag = 'section'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    structure?: 'stack' | 'split' | 'spread' | 'group'
    variant?: 'base' | 'raised' | 'primary'
    frame?: 'fill' | 'viewport' | 'panel'
    align?: 'start' | 'center' | 'end'
  }

const { as = 'section', structure = 'stack', ...rest } = Astro.props
---

<Tag
  class:list={['section']}
  {structure}
  {as}
  {...rest}
>
  <slot />
</Tag>

<style is:global lang="scss">
  :root,
  .full {
    --media: 1536px;
    --space-spacer: calc(var(--space-5) + 4vw);
    --space-gutter: max(4vw, calc((100vw - var(--media)) / 2));
  }

  .full.section {
    position: relative;
    gap: var(--space-6) var(--space-5);
    background: var(--background);
    padding: var(--space-spacer) var(--space-gutter);
    width: 100%;
    overflow-x: hidden;

    &.frame-panel {
      margin: var(--space-5) var(--space-gutter);
      border: 1px solid var(--border);
      border-radius: var(--radius-3);
      background-color: var(--background);
      padding: var(--space-5);
      width: auto;
      overflow: hidden;
    }

    &.frame-viewport {
      height: auto;
      min-height: 100vh;
    }
  }
</style>
