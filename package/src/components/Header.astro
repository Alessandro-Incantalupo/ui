---
import { z } from 'zod'
import { Button } from '..'
import { buildProps, parseProps } from '../utils/props'
import Buttons, { buttonGroupSchema } from './ButtonGroup.astro'
import LinkGroup, { linkGroupSchema } from './LinkGroup.astro'
import Logo, { logoSchema } from './Logo.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof headerSchema>

export const headerSchema = buildProps({
  logo: logoSchema,
  linkGroup: linkGroupSchema,
  buttonGroup: buttonGroupSchema,
  frame: z.enum(['screen', 'panel']).nullish(),
  variant: z.enum(['solid', 'soft', 'ghost']).nullish(),
  position: z.enum(['relative', 'sticky', 'fixed', 'absolute']).nullish(),
})

const {
  as = 'header',
  variant,
  position,
  frame,
  ...rest
} = parseProps(headerSchema, Astro.props)
---

<Tag
  class:list={['header', variant, position, frame]}
  compact
  {as}
  {...rest}
>
  <Logo {...rest.logo} />
  <Buttons {...rest.buttonGroup} />
  <Button
    variant={'soft'}
    color="base"
    as="label"
    contrast
    for="menu"
    class="icon-label"
    icon={{
      name: 'menu-2',
    }}
  />
  <input
    name="menu"
    class="menu"
    id="menu"
    type="checkbox"
  />
  <nav class="nav">
    <LinkGroup {...rest.linkGroup} />
    <Buttons {...rest.buttonGroup} />
  </nav>
  <slot />
</Tag>

<style is:global>
  .header {
    display: flex;
    top: 0;
    right: 0;
    left: 0;
    row-gap: var(--space-5);
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--hue1);
    padding: var(--space-3) var(--gutter);
    width: 100%;

    &.fixed {
      position: fixed;
      top: 0;
    }

    .nav {
      display: none;
      flex-direction: column;
      flex-wrap: wrap;
      align-items: center;
      gap: var(--space-4);
      margin-left: auto;
      width: max-content;
      width: 100%;
      font: var(--font);
      font-size: var(--text-2);

      .link-group {
        flex-direction: column;
        align-items: center;
        gap: var(--space-4);
        width: 100%;

        @media (min-width: 1024px) {
          flex-direction: row;
        }
      }
    }

    .logo + .button-group {
      margin-right: var(--space-3);
      margin-left: auto;
    }

    .icon {
      width: 1.6em;
      height: 1.6em;
    }

    .menu {
      display: none;

      &:checked + .nav {
        display: flex;
      }
    }
  }

  /* .fullcart-icon button {
    --background: var(--hue3) !important;
    --color: var(--hue11) !important;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 40px;
    height: 40px;

    p {
      background: var(--orange9);
    }
  } */
</style>
