---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Button from './Button.astro'
import Buttons, { buttonGroupSchema } from './ButtonGroup.astro'
import LinkGroup, { linkGroupSchema } from './LinkGroup.astro'
import Logo, { logoSchema } from './Logo.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof headerSchema>

export const headerSchema = buildProps({
  logo: logoSchema,
  linkGroup: linkGroupSchema,
  buttonGroup: buttonGroupSchema,
  frame: z.enum(['screen', 'panel']).nullish(),
  variant: z.enum(['solid', 'soft', 'ghost']).nullish(),
  position: z.enum(['relative', 'sticky', 'fixed', 'absolute']).nullish(),
})

const {
  as = 'header',
  variant,
  position,
  frame,
  ...rest
} = parseProps(headerSchema, Astro.props)
---

<Tag
  class:list={['header', variant, position, frame]}
  compact
  {as}
  {...rest}
>
  <Logo {...rest.logo} />
  <nav class="nav">
    <Button
      variant={'soft'}
      color="base"
      as="label"
      contrast
      for="menu"
      class="mobile"
      icon={{
        name: 'menu-2',
      }}
    />
    <input
      name="menu"
      class="menu"
      id="menu"
      type="checkbox"
    />
    <LinkGroup {...rest.linkGroup} />
    <Buttons {...rest.buttonGroup} />
  </nav>
  <slot />
</Tag>

<style is:global>
  .header {
    display: flex;
    top: 0;
    right: 0;
    left: 0;
    row-gap: var(--space-5);
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--hue1);
    padding: var(--space-3) var(--gutter);
    width: 100%;

    &.fixed {
      position: fixed;
      top: 0;
    }

    .nav {
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: var(--space-3);
      margin-left: auto;
      width: auto;
      font-size: var(--text-2);

      .link-group {
        display: none;
        position: absolute;
        top: 100%;
        right: 0;
        left: 0;
        gap: 0;
        row-gap: var(--space-3);
        /* display: none; */
        flex-direction: column;
        align-items: center;
        background: var(--hue1);
        padding: var(--space-5);
        width: 100%;

        @media (min-width: 1280px) {
          display: flex;
          position: relative;
          flex-direction: row;
          background: none;
          padding: 0;
        }

        .link {
          padding-right: var(--space-3);
          padding-left: var(--space-3);
          height: var(--space-6);
        }
      }
    }

    .logo + .button-group {
      margin-right: var(--space-3);
      margin-left: auto;
    }

    .icon {
      width: 1.6em;
      height: 1.6em;
    }

    .menu {
      display: none;

      &:checked + .link-group {
        display: flex !important;
      }
    }

    .mobile {
      order: 99;
      @media (min-width: 1280px) {
        display: none !important;
      }
    }
  }
</style>
