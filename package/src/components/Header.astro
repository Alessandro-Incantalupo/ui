---
import { z } from 'zod';
import { componentSchema } from '../schemas/componentSchema';
import { buttonGroupSchema } from './ButtonGroup.astro';
import { linkGroupSchema } from './LinkGroup.astro';
import { logoSchema } from './Logo.astro';
import Component from './misc/Component.astro';

type Props = z.infer<typeof headerSchema>;

export const headerSchema = componentSchema({
  logo: logoSchema,
  linkGroup: linkGroupSchema,
  buttonGroup: buttonGroupSchema,
  frame: z.enum(['screen', 'panel']),
  variant: z.enum(['solid', 'soft', 'ghost']),
  position: z.enum(['relative', 'sticky', 'fixed', 'absolute']),
});

const {
  tag = 'header',
  variant,
  position,
  frame,
  ...rest
} = headerSchema.parse(Astro.props);
---

<Component
  class:list={['header', variant, position, frame]}
  compact
  {tag}
  {...rest}
>
  <slot name="start" />
  <slot />
  <slot name="end" />
</Component>

<style is:global>
  .header {
    display: flex;
    top: 0;
    right: 0;
    left: 0;
    justify-content: space-between;
    align-items: center;
    z-index: 10;
    background: var(--hue1);
    padding: var(--space-2) var(--gutter);
    width: 100%;

    .fixed {
      position: fixed;
      top: 0;
    }
  }
</style>
