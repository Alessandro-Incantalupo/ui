---
// import type { ComponentProps } from 'astro/types'
// import { endomorphic, type Endomorphic } from '../utils'
// import Tag from './Tag.astro'

// interface Props
//   extends Endomorphic<Props, 'textarea', string>,
//     ComponentProps<typeof Tag> {}

import { z } from 'astro:content'
import { ectomorphic, endomorphic } from '../utils'
import { zTag } from './Tag.astro'

export const zTextarea = endomorphic(
  'textarea',
  zTag.extend({
    textarea: z.string().nullish(),
    rows: z.number().nullish(),
  })
)

type Props = z.infer<typeof zTextarea>
const {
  as = 'textarea',
  textarea,
  rows,
  ...rest
} = ectomorphic('textarea', zTextarea, Astro.props)
---

{
  textarea && (
    <textarea
      class="textarea"
      name={textarea}
      id={textarea}
      rows={rows}
      {...rest}
    />
  )
}

<style is:global>
  .textarea {
    transition: var(--transition);
    outline: none;
    border-width: var(--border-width);
    border-color: var(--hue7);
    border-radius: var(--radius-1);
    background: var(--hue3);
    padding: var(--space-2);
    width: 100%;
    color: var(--hue12);
    font-size: var(--text-2);
    line-height: 1;

    &:hover {
      border: var(--hue8);
    }

    &:focus {
      border-color: var(--hue11);
    }
  }
</style>
