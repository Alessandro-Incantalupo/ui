---
import { z } from 'zod'
import { componentSchema } from '../schemas/componentSchema'
import Option, { optionSchema } from './Option.astro'
import Parent from './misc/Parent.astro'

type Props = z.infer<typeof selectSchema>

export const selectSchema = componentSchema({
  option: optionSchema,
  options: z.array(optionSchema),
})

const { tag = 'select', options, ...rest } = selectSchema.parse(Astro.props)
---

<Parent
  if={options}
  {tag}
  class:list={['select']}
  {...rest}
>
  {
    options?.map((option) => (
      <Option value={option.value}>
        {option.html ? option.html : option.value}
      </Option>
    ))
  }
</Parent>

<style is:global>
  .select {
    transition: var(--transition);
    outline: none;
    border-width: var(--border-width);
    border-color: var(--hue7);
    border-radius: var(--radius-1);
    background: var(--hue3);
    padding: var(--space-2);
    width: 100%;
    color: var(--hue12);
    font-size: var(--text-2);
    line-height: 1;

    &:hover {
      border-color: var(--hue8);
    }

    &:focus {
      border-color: var(--hue11);
    }
  }
</style>
