---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Option, { optionSchema } from './Option.astro'

type Props = z.infer<typeof selectSchema>

export const selectSchema = buildProps({
  option: optionSchema,
  options: z.array(optionSchema).nullish(),
})

const { options, ...rest } = parseProps(selectSchema, Astro.props)
---

{
  options && (
    <select
      class="options"
      {...rest}
    >
      {options?.map((option) => (
        <Option value={option.value}>
          {option.html ? option.html : option.value}
        </Option>
      ))}
    </select>
  )
}

<style is:global>
  .options {
    transition: var(--transition);
    outline: none;
    border-width: var(--border-width);
    border-color: var(--hue7);
    border-radius: var(--radius-1);
    background: var(--hue3);
    padding: var(--space-2);
    width: 100%;
    color: var(--hue12);
    font-size: var(--text-2);
    line-height: 1;

    &:hover {
      border-color: var(--hue8);
    }

    &:focus {
      border-color: var(--hue11);
    }
  }
</style>
