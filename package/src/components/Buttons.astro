---
import { z } from 'astro:content'
import { morph } from '../utils'
import Button, { macro as buttonSchema } from './Button.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph('buttons', {
  buttons: z.array(buttonSchema),
})

const { buttons, ...rest } = meso(Astro.props)
---

<Tag
  class="buttons"
  {...rest}
>
  {
    buttons?.map((button) => (
      <Button
        {...micro(Astro.props)}
        {...button}
      />
    ))
  }
  <slot />
</Tag>

<style is:global>
  .buttons {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
  }
</style>
