---
import type { ComponentProps, HTMLTag } from 'astro/types'
import { buildProps, sortByIndex, type BuildProps } from '../utils'
import Button from './Button.astro'
import Tag from './Tag.astro'

type Props<As extends HTMLTag = 'div'> = BuildProps<
  'buttons',
  ComponentProps<typeof Tag<As>> & {
    buttons?: ComponentProps<typeof Button>[]
    index?: number | null
  }
>

const { buttons, ...rest } = buildProps('buttons', Astro)

const look: {
  [key: number]: 'solid' | 'soft' | 'ghost'
} = {
  0: 'solid',
  1: 'soft',
  2: 'ghost',
}

const sorted = sortByIndex(buttons)
---

<Tag {...rest}>
  {
    sorted?.map((button, i) => (
      <Button
        look={look[i]}
        {button}
      />
    ))
  }
  <slot />
</Tag>

<style is:global>
  .buttons {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
  }
</style>
