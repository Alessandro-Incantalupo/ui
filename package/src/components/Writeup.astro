---
import type { ComponentProps } from 'astro/types'
import { endomorphic, getChildProps, type Endomorphic } from '../utils'
import Description from './Description.astro'
import Tag from './Tag.astro'
import Tagline from './Tagline.astro'
import Title from './Title.astro'

interface Props
  extends Endomorphic<Props, 'writeup', string>,
    ComponentProps<typeof Tag>,
    Pick<ComponentProps<typeof Tagline>, 'tagline' | '_tagline'>,
    Pick<ComponentProps<typeof Title>, 'title' | '_title'>,
    Pick<ComponentProps<typeof Description>, 'description' | '_description'> {
  align?: 'start' | 'center' | null
}

const { writeup, align, ...rest } = endomorphic(Astro.props, 'writeup')
const child = getChildProps(rest)
---

<Tag
  class:list={['writeup', align]}
  {...rest}
>
  <Tagline {...child} />
  <Title {...child} />
  <Description {...child} />
  <Fragment set:html={writeup} />
</Tag>

<style is:global>
  .writeup {
    display: flex;
    row-gap: var(--space-3);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 4), 600px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
