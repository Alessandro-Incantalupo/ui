---
import { z } from 'astro:content'
import { ectomorphic, endomorphic, getChildProps } from '../utils'
import Description, { zDescription } from './Description.astro'
import Tag, { zTag } from './Tag.astro'
import Tagline, { zTagline } from './Tagline.astro'
import Title, { zTitle } from './Title.astro'

export const zWriteup = endomorphic(
  'writeup',
  // @ts-ignore
  zTag.merge(zTitle).merge(zDescription).merge(zTagline).extend({
    writeup: z.string().nullish(),
    align: z.string().nullish(),
  })
)

type Props = z.infer<typeof zWriteup>

const { writeup, align, title, ...rest } = ectomorphic(
  'writeup',
  zWriteup,
  Astro.props
)

const child = getChildProps(rest)
---

<Tag
  class:list={['writeup', align]}
  {...rest}
>
  <Tagline {...child} />
  <Title {...child} />
  <Description {...child} />
  <Fragment set:html={writeup} />
</Tag>

<style is:global>
  .writeup {
    display: flex;
    row-gap: var(--space-3);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 4), 600px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
