---
import { z } from 'astro:content'
import { morph } from '../utils'
import Description, { macro as description } from './Description.astro'
import Tag from './Tag.astro'
import Tagline, { macro as tagline } from './Tagline.astro'
import Title, { macro as title } from './Title.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph(
  'writeup',
  tagline
    .pick({ tagline: true, _tagline: true })
    .merge(title.pick({ title: true, _title: true }))
    .merge(description.pick({ description: true, _description: true }))
    .extend({
      writeup: z.string().nullish(),
      align: z.enum(['start', 'center']).nullish(),
    })
)

// {
//   tagline: tagline.shape.tagline,
//   _tagline: tagline.shape._tagline,
//   title: title.shape.title,
//   _title: title.shape._title,
//   description: description.shape.description,
//   _description: description.shape._description,
//   writeup: z.string().nullish(),
//   align: z.enum(['start', 'center']).nullish(),
// })

const { writeup, align, ...rest } = meso(Astro.props)
---

<Tag
  class:list={['writeup', align]}
  {...rest}
>
  <Tagline {...micro(rest)} />
  <Title {...micro(rest)} />
  <Description {...micro(rest)} />
  <Fragment set:html={writeup} />
</Tag>

<style is:global>
  .writeup {
    display: flex;
    row-gap: var(--space-3);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 4), 600px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
