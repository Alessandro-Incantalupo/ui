---
import type { ComponentProps } from 'astro/types'
import { endomorphic, getChildProps, type Endomorphic } from '../utils'
import Checkbox from './Checkbox.astro'
import Input from './Input.astro'
import Label from './Label.astro'
import Options from './Options.astro'
import Tag from './Tag.astro'
import Textarea from './Textarea.astro'

interface Props
  extends Endomorphic<Props, 'field'>,
    ComponentProps<typeof Tag>,
    Pick<ComponentProps<typeof Label>, 'label' | '_label'>,
    Pick<ComponentProps<typeof Options>, 'options' | '_options'>,
    Pick<ComponentProps<typeof Checkbox>, 'checkbox' | '_checkbox'>,
    Pick<ComponentProps<typeof Textarea>, 'textarea' | '_textarea'>,
    Pick<ComponentProps<typeof Input>, 'input' | '_input'> {}

const { as = 'div', checkbox, ...rest } = endomorphic(Astro.props, 'field')
const child = getChildProps(rest)
---

<Tag
  class:list={['field', checkbox ? 'checkbox' : null]}
  {...rest}
>
  <Checkbox {checkbox} />
  <Label {...child} />
  <Textarea {...child} />
  <Input {...child} />
  <slot />
</Tag>

<style is:global>
  .field {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-1);
    width: 100%;

    &.checkbox {
      flex-direction: row !important;
      align-items: center !important;
      gap: var(--space-2) !important;
    }

    &.has-checkbox {
      flex-direction: row-reverse;
      justify-content: flex-end;
      align-items: center;
      gap: var(--space-2);
      padding: var(--space-1) 0;
    }
  }
</style>
