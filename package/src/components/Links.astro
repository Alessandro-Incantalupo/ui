---
// TODO: convert naar zod

import { z } from 'astro:content'
import { morph } from '../utils'
import Link, { macro as linkSchema } from './Link.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph('links', {
  links: z.array(linkSchema),
})

const { links, ...rest } = meso(Astro.props)
---

<Tag
  class="links"
  {...rest}
>
  {links?.map((link) => <Link {...link} />)}
</Tag>

<style is:global>
  .links {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-3);
  }
</style>
