---
import { z } from 'zod'
import { allowedComponents } from '../schemas/childrenComponentsSchema'

// TODO: allowed component hier naar deze file verplaatsen
export const ChildrenSchema = z.object({}).catchall(z.any())

const props = ChildrenSchema.parse(Astro.props)

const toPascalCase = (str: string) => str.charAt(0).toUpperCase() + str.slice(1)
---

{
  Object.entries(props).map(([key, value]) => {
    if (key === 'html') return <Fragment set:html={value} />
    if (typeof key !== 'object') return null

    // if (Array.isArray(value)) value.map((item) => <Astro.self {...item} />)

    if (value.component) {
      const componentName = value.component
      const Component = allowedComponents[componentName] ?? null
      if (Component) return <Component {...value} />
    }

    const componentName = toPascalCase(key)
    let Component = allowedComponents[componentName] ?? null
    if (Component) return <Component {...value} />

    if (value.component || value.as || value.html) {
      const Component = allowedComponents['Element']
      return <Component {...value} />
    }

    return
  })
}
