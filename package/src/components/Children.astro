---
import { z } from 'zod'
import { allowedComponents } from '../schemas/childrenComponentsSchema'

export const ChildrenSchema = z.object({}).catchall(z.any())

const props = ChildrenSchema.parse(Astro.props)

function toPascalCase(str: string) {
  return str.charAt(0).toUpperCase() + str.slice(1)
}
---

{
  Object.entries(props).map(([key, value]) => {
    let Component = allowedComponents[toPascalCase(key)]

    if (value?.component)
      Component = allowedComponents[toPascalCase(value.component)]

    if (value?.tag) Component = allowedComponents['Element']

    if (!Component) return null

    if (value.html) {
      return (
        <Component
          class:list={[value?.component || value?.tag ? key.toLowerCase() : '']}
          {...value}
        >
          <Fragment set:html={value?.html ? value?.html : value} />
        </Component>
      )
    }

    return (
      <Component
        class:list={[value?.component || value?.tag ? key.toLowerCase() : '']}
        {...value}
      />
    )
  })
}
