---
import type { ComponentProps, HTMLTag } from 'astro/types'
import { buildProps, type BuildProps } from '../utils'
import Buttons from './Buttons.astro'
import Form from './Form.astro'
import Product from './Product.astro'
import Tag from './Tag.astro'

interface Base
  extends Pick<ComponentProps<typeof Form>, 'form' | '_form'>,
    ComponentProps<typeof Product>,
    Pick<ComponentProps<typeof Buttons>, 'buttons' | '_buttons'> {
  align?: 'start' | 'center' | 'stretch' | null
}

type Props<Tag extends HTMLTag = 'div'> = BuildProps<Base, 'action', Tag>
const props = buildProps(Astro, 'action')

const { as, class: className, ...rest } = props
---

<Tag
  {as}
  class={className}
  {...rest}
>
  {props.price ? <Product {...rest} /> : <Form {...(rest as any)} />}
  <Buttons {...rest} />
  <slot />
</Tag>

<style is:global>
  .action {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }
</style>
