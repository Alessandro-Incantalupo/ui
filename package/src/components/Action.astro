---
import { z } from 'astro:content'
import { morph } from '../utils'
import Buttons, { macro as buttons } from './Buttons.astro'
import Form, { macro as form } from './Form.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph('action', {
  action: z.undefined(), // FIXME needed, otherwise morph doesn't work
  buttons: buttons.shape.buttons,
  _buttons: buttons.shape._buttons,
  button: buttons.shape.button,
  _button: buttons.shape._button,
  form: form.shape.form,
  _form: form.shape._form,
  align: z.enum(['start', 'center']).nullish(),
})

const { ...rest } = meso(Astro.props)
---

<Tag
  class:list={['action']}
  {...rest}
>
  <!-- {props.price ? <Product {...rest} /> : <Form {...(rest as any)} />} -->
  <Form {...micro(rest)} />
  <Buttons {...micro(rest)} />
  <slot />
</Tag>

<style is:global>
  .action {
    display: flex;
    flex-direction: column;
    gap: var(--space-3);
  }
</style>
