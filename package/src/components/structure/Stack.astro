---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Tag from '../_Tag.astro'

type Props<As extends HTMLTag = 'div'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    align?: 'start' | 'center' | 'end'
  }

const { align = 'start', ...rest } = Astro.props
---

<Tag
  class:list={['stack']}
  {align}
  {...rest}
>
  <slot />
</Tag>

<style is:global lang="scss">
  html :where(.full.stack, .full.structure-stack) {
    display: flex;
    flex-direction: column;
    gap: 0 !important;
    width: 100%;

    &:where(.align-start) {
      align-items: flex-start;
    }

    &:where(.align-center) {
      align-items: center;
      text-align: center;

      > * > * {
        text-align: left;
      }
    }

    &:where(.align-end) {
      align-items: flex-end;
    }

    > {
      :where(.full) {
        margin-top: 0;
        margin-bottom: 0;
      }

      :where(.full) + :where(.full) {
        margin-top: var(--space-5);
      }

      :where(.full) + :where(.group),
      :where(.full) + :where(.button),
      :where(.full) + :where(.switch) {
        margin-top: var(--space-4);
      }

      :where(.full) + :where(.heading),
      :where(.full) + :where(.label),
      :where(.full) + :where(.link),
      :where(.full) + :where(.list),
      :where(.full) + :where(.paragraph),
      :where(.full) + :where(.tagline),
      :where(.full) + :where(.input),
      :where(.full) + :where(.badge),
      :where(.full) + :where(.rating) {
        margin-top: var(--space-3);
      }

      :where(.paragraph) + :where(.paragraph),
      :where(.button) + :where(.button) {
        margin-top: var(--space-2);
      }

      :where(.label) + :where(.input) {
        margin-top: var(--space-1);
      }

      :where(.image) + :where(.full),
      :where(.icon) + :where(.full) {
        margin-top: var(--space-5);
      }
    }
  }
</style>
