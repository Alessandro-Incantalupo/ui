---
import { z } from 'zod'
import Header, { headerSchema } from './Header.astro'
import Main, { mainSchema } from './Main.astro'
import Tag, { componentSchema } from './Tag.astro'

type Props = z.infer<typeof bodySchema>

export const bodySchema = componentSchema({
  header: headerSchema,
  main: mainSchema,
}).omit({ as: true, if: true })

const { ...rest } = bodySchema.parse(Astro.props)
---

<Tag
  as="body"
  class:list={['body', 'hue-base', 'hue-accent']}
  {...rest}
>
  <Header {...rest.header} />
  <Main {...rest.main} />

  <style is:global>
    .body {
      transition: var(--transition);
      background: var(--hue1);
      height: 100%;
      min-height: 100vh;
      color: var(----hue11);
      font: var(--font);

      &.dark {
        color-scheme: dark;
      }
      &.light {
        color-scheme: light;
      }
    }
  </style>
</Tag>
