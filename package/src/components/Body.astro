---
import type { ComponentProps } from 'astro/types'
import { endomorphic, type Endomorphic } from '../utils'
import Section from './Section.astro'
import Sections from './Sections.astro'
import Tag from './Tag.astro'

interface Props
  extends Endomorphic<Props, 'body'>,
    ComponentProps<typeof Tag>,
    ComponentProps<typeof Section> {
  hero?: Pick<ComponentProps<typeof Section>, 'section'>
  _hero?: Pick<ComponentProps<typeof Section>, '_section'>
  cta?: Pick<ComponentProps<typeof Section>, 'section'>
  _cta?: Pick<ComponentProps<typeof Section>, '_section'>
}

const {
  as = 'body',
  hero,
  _hero,
  cta,
  _cta,
  ...rest
} = endomorphic(Astro.props, 'body')
---

<Tag
  class="body hue-base"
  {as}
  {...rest}
>
  <!-- <Banner></Banner> -->
  <!-- <Header {...rest} /> -->
  <Sections {...rest}>
    <Section
      class="hero"
      {..._hero}
      {...hero}
      slot="before"
    />
    <Section
      class="cta"
      {..._cta}
      {...cta}
      slot="after"
    />
  </Sections>
  <slot />
  <!-- <Footer {...rest} /> -->
  <!-- <Legal {...rest} /> -->

  <style is:global>
    .body {
      transition: var(--transition);
      background: var(--hue1);
      min-height: 100vh;
      color: var(----hue11);
      font: var(--font);

      &.dark {
        color-scheme: dark;
      }
      &.light {
        color-scheme: light;
      }
    }
  </style>
</Tag>
