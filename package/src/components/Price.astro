---
import type { ComponentProps, HTMLTag } from 'astro/types'
import { buildProps, type BuildProps } from '../utils'
import Tag from './Tag.astro'

type Props<As extends HTMLTag = 'div'> = BuildProps<
  'price',
  ComponentProps<typeof Tag<As>> & {
    price?: number | null
  }
>

const { price, ...rest } = buildProps('price', Astro.props)

const priceNumber = parseFloat(price as any)
const fixedPrice = priceNumber?.toFixed(2).replace('.', ',')
---

<Tag
  class="price"
  {...rest}
>
  {price && fixedPrice && <Fragment>&euro;{fixedPrice}</Fragment>}
</Tag>

<style is:global>
  .price {
    color: var(--hue12);
    font-weight: 700;
    font-size: var(--text-2);
    line-height: 1;
  }
</style>
