---
import { z } from 'astro:content'
import { morph } from '../utils'
import Icon, { macro as icon } from './Icon.astro'
import Rating, { macro as rating } from './Rating.astro'
import Specs, { macro as specs } from './Specs.astro'
import Tag from './Tag.astro'
import Writeup, { macro as writeup } from './Writeup.astro'

type Props = z.infer<typeof macro>

export const { macro, meso, micro } = morph('display', {
  rating: rating.shape.rating,
  _rating: rating.shape._rating,
  icon: icon.shape.icon,
  _icon: icon.shape._icon,
  ...writeup.shape,
  specs: specs.shape.specs,
  _specs: specs.shape._specs,
  align: z.enum(['start', 'center']).nullish(),
})

const { align, ...rest } = meso(Astro.props)
---

<Tag
  class:list={['display', align]}
  {...rest}
>
  <Rating {...micro(rest)} />
  <Icon {...micro(rest)} />
  <Writeup {...micro(rest)} />
  <Specs {...micro(rest)} />
  <slot />
</Tag>

<style is:global>
  .display {
    display: flex;
    row-gap: var(--space-4);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 6), 700px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
