---
import type { ComponentProps } from 'astro/types'
import { endomorphic, getChildProps, type Endomorphic } from '../utils'
import Channels from './Channels.astro'
import Icon from './Icon.astro'
import Rating from './Rating.astro'
import Socials from './Socials.astro'
import Specs from './Specs.astro'
import Tag from './Tag.astro'
import Writeup from './Writeup.astro'

interface Props
  extends Endomorphic<Props, 'display'>,
    ComponentProps<typeof Tag>,
    Pick<ComponentProps<typeof Writeup>, 'writeup' | 'writeup'>,
    Pick<ComponentProps<typeof Rating>, 'rating' | '_rating'>,
    Pick<ComponentProps<typeof Icon>, 'icon' | '_icon'>,
    Pick<ComponentProps<typeof Specs>, 'specs' | '_specs'> {
  align?: 'start' | 'center' | null
}

const { align, ...rest } = endomorphic(Astro.props, 'display')
const child = getChildProps(rest)
---

<Tag
  class:list={['display', align]}
  {...rest}
>
  <Rating {...child} />
  <Icon {...child} />
  <Writeup
    {align}
    {...child}
  />
  <Specs {...child} />
  <Channels {...child} />
  <Socials {...child} />
  <slot />
</Tag>

<style is:global>
  .display {
    display: flex;
    row-gap: var(--space-4);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 6), 700px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
