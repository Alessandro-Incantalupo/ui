---
import { z } from 'astro:content'
import { ectomorphic, endomorphic, getChildProps } from '../utils'
import Icon, { zIcon } from './Icon.astro'
import Rating, { zRating } from './Rating.astro'
import Specs, { zSpecs } from './Specs.astro'
import Tag, { zTag } from './Tag.astro'
import Writeup, { zWriteup } from './Writeup.astro'

export const zDisplay = endomorphic(
  'display',
  // @ts-ignore
  zTag.merge(zWriteup).merge(zRating).merge(zIcon).merge(zSpecs).extend({
    display: z.string().nullish(),
    align: z.string().nullish(),
  })
)

type Props = z.infer<typeof zDisplay>

const { align, ...rest } = ectomorphic('display', zDisplay, Astro.props)

const child = getChildProps(rest)
---

<Tag
  class:list={['display', align]}
  {...rest}
>
  <Rating {...child} />
  <Icon {...child} />
  <Writeup
    {align}
    {...child}
  />
  <Specs {...child} />
  <slot />
</Tag>

<style is:global>
  .display {
    display: flex;
    row-gap: var(--space-4);
    flex-direction: column;
    align-items: flex-start;
    max-width: max(calc(var(--space-6) * 6), 700px);
    text-align: left;

    &.center {
      align-items: center;
      text-align: center;
    }

    &:is(.split &.center) {
      align-items: start;
      text-align: left;
    }
  }
</style>
