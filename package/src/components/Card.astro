---
import type { ComponentProps } from 'astro/types'
import { type CollectionEntry, type ContentCollectionKey } from 'astro:content'
import { endomorphic, getChildProps, type Endomorphic } from '../utils'
import Composite from './Composite.astro'
import Image from './Image.astro'
import Tag from './Tag.astro'

interface Props
  extends Endomorphic<Props, 'card'>,
    ComponentProps<typeof Tag>,
    ComponentProps<typeof Composite>,
    Pick<ComponentProps<typeof Image>, 'image' | '_image'> {
  collection?: ContentCollectionKey
  slug?: CollectionEntry<ContentCollectionKey>['slug'] | null
  look?: 'ghost' | 'soft' | 'solid' | null
  frame?: 'fill' | 'panel' | 'screen' | null
}

const { look, frame, collection, slug, ...rest } = endomorphic(
  Astro.props,
  'card'
)

// const entry =
//   collection && slug ? (await getEntry(collection, slug)).data : null
// const merged = merge(entry, rest)
const child = getChildProps(rest)
---

<Tag
  class:list={['card', look, frame]}
  compact
  {...rest}
>
  <Image {...child} />
  <Composite {...child} />
</Tag>

<style is:global>
  .card {
    display: flex;
    position: relative;
    flex-direction: column;
    justify-content: stretch;
    gap: var(--space-4);

    .composite {
      justify-content: space-between;
      gap: var(--space-5);
      /* height: 100%; */
    }

    a {
      transition: var(--transition);

      &:hover > .image {
        opacity: 0.85;
      }

      &:active {
        transform: scale(0.95);
      }
    }

    &.panel {
      gap: 0;
      border-radius: var(--radius-2);
      overflow: hidden;

      a {
        &:hover {
          background: var(--hue3);
        }

        &:active {
          background: var(--hue4);
        }
      }

      &.soft {
        border-width: var(--border-width);
        border-color: var(--hue6);
        background-color: var(--hue2);

        a {
          border-color: var(--hue7);
          background: var(--hue2);

          &:hover {
            border-color: var(--hue8);
            background: var(--hue3);
          }

          &:active {
            background: var(--hue4);
          }
        }

        .image {
          border-bottom-right-radius: 0;
          border-bottom-left-radius: 0;
        }
      }

      &.solid {
        border-color: var(--hue9);
        background: var(--hue9);

        * {
          color: var(--hue-fg);
        }

        a:hover {
          background: var(--hue10);
        }

        .image {
          border-bottom-right-radius: 0;
          border-bottom-left-radius: 0;
        }
      }
    }

    &.landscape {
      aspect-ratio: 4/3;
      object-fit: cover;
    }

    &.square {
      aspect-ratio: 1/1;
      object-fit: cover;
    }

    &.portrait {
      aspect-ratio: 3/4;
      object-fit: cover;
    }
  }
</style>
