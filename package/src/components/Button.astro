---
import type { ComponentProps } from 'astro/types'
import { buildProps, type BuildProps } from '../utils'
import Icon from './Icon.astro'
import Tag from './Tag.astro'

interface Base extends ComponentProps<typeof Icon> {
  look?: 'solid' | 'soft' | 'ghost' | null
  hue?: 'accent' | 'base' | null
  text?: string | null
}

type Props = BuildProps<Base, 'button', 'button' | 'a'>
const props = buildProps(Astro, 'button')

const {
  look = 'solid',
  hue = 'hue-accent',
  icon,
  _icon,
  as = 'a',
  text,
  ...rest
} = props
---

<Tag
  class:list={[look, hue]}
  {as}
  {...rest}
>
  <Icon
    class="button-icon"
    {icon}
    {_icon}
    {hue}
  />
  <Fragment set:html={text} />
  <slot />
</Tag>

<style is:global>
  @layer fullui {
    .button {
      --button-background: var(--hue3);
      --button-background-hover: var(--hue4);
      --button-background-active: var(--hue5);
      --button-border-color: var(--hue7);
      --button-border-color-hover: var(--hue7);
      --button-color: var(--hue11);

      display: inline-flex;
      flex-grow: 1;
      flex-shrink: 0;
      flex-basis: auto;
      justify-content: center;
      align-items: center;
      gap: var(--spacing-1);
      transition: var(--transition);
      cursor: pointer;
      border-width: var(--border-width);
      border-color: var(--button-border-color);
      border-radius: var(--border-radius-2);
      background: var(--button-background);
      padding: var(--spacing-3);
      color: var(--button-color);
      line-height: 1;
      text-align: center;
      white-space: nowrap;

      &:hover {
        border-color: var(--button-border-color-hover);
        background: var(--button-background-hover);
      }

      &:active {
        background: var(--button-background-active);
      }

      &:disabled {
        opacity: 0.5;
        cursor: not-allowed;
        pointer-events: none;
      }

      &:active {
        transform: scale(0.95);
      }

      &:where(.solid) {
        --button-background: var(--hue9);
        --button-background-hover: var(--hue10);
        --button-background-active: var(--hue10);
        --button-border-color: transparent;
        --button-border-color-hover: transparent;
        --button-color: var(--hue-fg);
      }

      &:where(.soft) {
        --button-background: var(--hue3);
        --button-background-hover: var(--hue4);
        --button-background-active: var(--hue5);
        --button-border-color: var(--hue7);
        --button-border-color-hover: var(--hue8);
        --button-color: var(--hue11);
      }

      &:where(.ghost) {
        --button-background: transparent;
        --button-background-hover: var(--hue2);
        --button-background-active: var(--hue3);
        --button-border-color: transparent;
        --button-border-color-hover: transparent;
        --button-color: var(--hue11);
      }
    }
  }
</style>
