---
import type { ComponentProps } from 'astro/types'
import { buildProps, getChildProps, type BuildProps } from '../utils'
import Icon from './Icon.astro'
import Tag from './Tag.astro'

interface Props
  extends BuildProps<'button', Props, string>,
    ComponentProps<typeof Tag>,
    Pick<ComponentProps<typeof Icon>, 'icon' | '_icon'> {
  look?: 'solid' | 'soft' | 'ghost' | null
  contrast?: boolean | null
}

const {
  as = 'a',
  look = 'solid',
  contrast,
  button,
  ...rest
} = buildProps('button', Astro.props)
const child = getChildProps(rest)
---

<Tag
  class:list={['button', look, { contrast }]}
  {as}
  {...rest}
>
  <Icon {...child} />
  <Fragment set:html={button} />
  <slot />
</Tag>

<style is:global>
  .button {
    display: inline-flex;
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: auto;
    justify-content: center;
    align-items: center;
    gap: var(--space-2);
    transition: var(--transition);
    cursor: pointer;
    border-width: var(--border-width);
    border-radius: var(--radius-2);
    padding: 0 var(--space-3);
    min-width: var(--space-6);
    height: var(--space-6);
    font-size: var(--text-2);
    line-height: 1;
    text-align: center;
    text-decoration: none;
    white-space: nowrap;

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
      pointer-events: none;
    }

    &.solid {
      border-color: transparent;
      background: var(--hue9);
      button: var(--hue-fg);

      &.contrast {
        background: var(--hue12);
        button: var(--hue1);
      }

      &:hover {
        border-color: transparent;
        background: var(--hue10);

        &.contrast {
          background: var(--hue12);
        }
      }

      &:active {
        background: var(--hue10);

        &.contrast {
          background: var(--hue12);
        }
      }
    }

    &.soft {
      border-color: var(--hue7);
      background: var(--hue3);
      color: var(--hue11);

      &.contrast {
        color: var(--hue12);
      }

      &:hover {
        border-color: var(--hue8);
        background: var(--hue4);
      }

      &:active {
        background: var(--hue5);
      }
    }

    &.ghost {
      border-color: transparent;
      background: transparent;
      color: var(--hue11);

      &.contrast {
        color: var(--hue12);
      }

      &:hover {
        border-color: transparent;
        background: var(--hue2);
      }

      &:active {
        background: var(--hue3);
      }
    }
  }
</style>
