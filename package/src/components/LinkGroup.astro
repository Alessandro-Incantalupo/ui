---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Link, { linkSchema } from './Link.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof linkGroupSchema>

export const linkGroupSchema = buildProps({
  link: linkSchema,
  links: z.array(linkSchema).nullish(),
  direction: z.enum(['row', 'column']).nullish(),
  align: z.enum(['start', 'center', 'end', 'stretch']).nullish(),
})

const {
  links,
  direction = 'row',
  align = 'center',
  ...rest
} = parseProps(linkGroupSchema, Astro.props)
---

<Tag
  class="link-group"
  {...rest}
>
  {
    links?.map((item) => (
      <Link
        {...rest.link}
        {...item}
      />
    ))
  }
</Tag>

<style is:global>
  .link-group {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-3);

    &.row {
      flex-direction: row;
    }

    &.column {
      flex-direction: column;
    }

    &.align-start {
      align-items: flex-start;
    }

    &.align-center {
      align-items: center;
    }

    &.align-end {
      align-items: flex-end;
    }
  }
</style>
