---
import { z } from 'astro:content'
import { endomorphic } from '../utils'
import Tag, { zTag } from './Tag.astro'

export const zTitle = endomorphic(
  'title',
  zTag.extend({
    title: z.string().nullish(),
    contrast: z.boolean().nullish(),
  })
)

type Props = z.infer<typeof zTitle>

console.log('unparsed', Astro.props)
const parsed = zTitle.parse(Astro.props)
console.log('parsed', parsed)

// const {
//   as = 'h2',
//   contrast = true,
//   title,
//   ...rest
// } = ectomorphic('title', zTitle, Astro.props)
---

<!-- <Tag
  {as}
  class:list={['title', { contrast }]}
  {...rest}
>
  <Fragment set:html={title} />
  <slot />
</Tag>

<style is:global>
  .title {
    color: var(--hue11);
    font: var(--font);
    font-weight: 700;
    font-size: var(--text-3);
    line-height: 1.25;

    &.contrast {
      color: var(--hue12);
    }
  }
</style> -->
