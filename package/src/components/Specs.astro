---
import { z } from 'zod'
import { buildProps, parseProps } from '../utils/props'
import Spec, { specSchema } from './Spec.astro'
import Tag from './Tag.astro'

type Props = z.infer<typeof specsSchema>

export const specsSchema = buildProps({
  items: z.array(specSchema.or(specSchema.shape.html)).nullish(),
})

const { items, ...rest } = parseProps(specsSchema, Astro.props)
---

<Tag
  class:list={['specs']}
  {...rest}
>
  <slot>
    {
      items?.map((item) => {
        if (typeof item === 'string') return <Spec html={item} />
        else return <Spec {item} />
      })
    }
  </slot>
</Tag>

<style is:global>
  .specs {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
  }
</style>
