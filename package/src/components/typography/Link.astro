---
import type { HTMLTag, Polymorphic } from 'astro/types'
import Component from '../Root.astro'

type Props<As extends HTMLTag = 'a'> = Polymorphic<{ as: As }> & {
  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl'
  color?: 'base' | 'brand'
  underline?: 'auto' | 'always' | 'hover' | 'none'
  contrast?: boolean
  html?: string
  text?: string
}

const { as = 'a', underline = 'auto', ...rest } = Astro.props
---

<Component
  class:list={['link']}
  {as}
  {underline}
  {...rest}
>
  <slot />
</Root>

<style is:global lang="scss">
  @import '../../css/utils.scss';

  @include component('link') {
    display: inline-flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--space-2);
    cursor: pointer;
    border: none;
    background: none;
    color: var(--text);
    font-weight: var(--font-weight);
    font-size: var(--text-2);
    font-family: var(--font-family);
    text-decoration-color: var(--border); // FIXME, werkt niet
    white-space: nowrap;

    &:hover {
      color: var(--color-12);
    }

    &.underline-auto {
      text-decoration: none;

      &:is(p > &) {
        text-decoration: underline;
      }
    }

    &.underline-always {
      text-decoration: underline;
    }

    &.underline-hover {
      text-decoration: none;
      &:hover {
        text-decoration: underline;
      }
    }

    &.underline-none {
      text-decoration: none;
    }
  }
</style>
