---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import { isObject } from 'radash'
import ListItem from './ListItem.astro'
import Typography from './_Typography.astro'

type Props<As extends HTMLTag = 'ul'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Typography> & {
    items?: (ComponentProps<typeof ListItem> | string)[]
  }

const { as = 'ul', items, ...rest } = Astro.props
---

<Typography
  class:list={['full-list']}
  {as}
  {...rest}
>
  <slot name="before" />
  {
    items?.map((item) => {
      if (isObject(item)) return <ListItem {...item} />
      else return <ListItem html={item} />
    })
  }
  <slot />
</Typography>

<style is:global lang="scss">
  .full-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-1);
    padding-left: var(--space-4);
    color: var(--foreground);
    list-style-type: disc;
  }
</style>
