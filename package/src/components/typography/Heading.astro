---
import type { ComponentProps, HTMLTag, Polymorphic } from 'astro/types'
import Tag from '../_Tag.astro'

type Props<As extends HTMLTag = 'h2'> = Polymorphic<{ as: As }> &
  ComponentProps<typeof Tag> & {
    html?: string
    text?: string
    variant?: 'base' | 'muted' | 'accent'
    level?: 1 | 2 | 3 | 4 | 5 | 6
  }

const {
  level = 2,
  as = `h${level}`,
  density = level > 3 ? 'compact' : undefined,
  ...rest
} = Astro.props
---

<Tag
  class:list={['heading']}
  {level}
  {as}
  {density}
  {...rest}
>
  <slot />
</Tag>

<style is:global lang="scss">
  html :where(.full.heading) {
    margin: 0;
    max-width: calc(var(--element-3) * 36);
    color: var(--foreground);
    font-weight: var(--heading-font-weight);
    line-height: 1.1;
    font-family: var(--heading-font-family);
    letter-spacing: -0.025em;
    text-decoration: none;

    &:where(.level-1, .level4) {
      font-size: var(--text-5);
    }

    &,
    &:where(.level-2, .level-5) {
      font-size: var(--text-4);
    }

    &:where(.level-3, .level-6) {
      font-size: var(--text-3);
    }
  }
</style>
