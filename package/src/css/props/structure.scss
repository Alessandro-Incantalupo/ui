/* Horizontal */
.structure-row {
  --space-x: 1;

  display: flex;

  & > .full {
    margin-top: 0;
  }
}

/* Vertical */
.structure-column {
  --space-y: 1;

  display: flex;
  flex-direction: column;

  & > .full {
    margin-left: 0;
  }
}

/* Horizontal with equa columns */
.structure-split {
  --space-y: 1;

  display: grid;
  grid-template-columns: 1fr;

  & > .full {
    margin: 0;
  }

  @media (min-width: 1024px) {
    --space-y: unset;

    grid-template-columns: 1fr 1fr;
    grid-auto-flow: column;
    column-gap: var(--space-6);

    & > .full {
      margin-top: 0;
    }
  }
}

/* Horizontal and wrapping */
.structure-wrap {
  display: flex;
  flex-wrap: wrap;
  justify-content: stretch;
  gap: var(--space-2);
}

/* Horizontal with space-between */
.structure-spread {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: stretch;
  gap: var(--space-4);
  width: 100%;

  & > .full {
    width: auto;
  }
}

/* Equal columns and rows */
.structure-grid {
  --column-width: calc(15 * var(--element-3));

  display: grid;
  position: relative;
  grid-template-columns: repeat(auto-fit, minmax(var(--column-width), 1fr));
  gap: var(--space-3);
  width: 100%;
}

/* Equal rows, but not columns */
.structure-bento {
  display: grid;
  position: relative;
  grid-template-columns: 1fr;
  width: 100%;

  @media (min-width: 1024px) {
    grid-template-columns: 1fr 1fr 1fr;

    & > *:nth-child(2n) {
      grid-column-start: span 2;
    }
  }
}

/* Equal columns, but not rows */
.structure-masonry {
  --column-width: calc(16 * var(--element-3));
  --gap: var(--space-3);

  position: relative;
  column-gap: var(--gap);
  column-fill: balance;
  column-width: var(--column-width);
  column-count: 6;
  break-inside: avoid;
  width: 100%;

  & > .full + .full {
    break-inside: avoid;
    margin-top: var(--gap);
    margin-bottom: var(--gap);
  }
}

/* Equal columns, scrollable horizontally */
.structure-carousel {
  --column-width: calc(16 * var(--element-3));

  display: flex;
  position: relative;
  position: relative;
  flex-direction: row;
  align-items: flex-start;
  gap: var(--space-3);
  padding-bottom: var(--space-3);
  width: 100%;
  overflow-x: auto;
  scroll-behavior: smooth;
  scroll-snap-type: x mandatory;

  > .full {
    flex-grow: 0;
    flex-shrink: 0;
    width: var(--column-width);
    scroll-snap-align: center;
  }
}

/* For ALL */
.structure-split,
.structure-row,
.structure-column {
  > {
    .full + .full {
      margin-top: calc(var(--space-y) * var(--space-5));
      margin-left: calc(var(--space-x) * var(--space-5));
    }

    .full + .group,
    .full + .button,
    .full + .switch {
      margin-top: calc(var(--space-y) * var(--space-4));
      margin-left: calc(var(--space-x) * var(--space-4));
    }

    .full + .heading,
    .full + .label,
    .full + .link,
    .full + .list,
    .full + .paragraph,
    .full + .tagline,
    .full + .input,
    .full + .badge,
    .full + .rating {
      margin-top: calc(var(--space-y) * var(--space-3));
      margin-left: calc(var(--space-x) * var(--space-3));
    }

    .paragraph + .paragraph,
    .button + .button {
      margin-top: calc(var(--space-y) * var(--space-2));
      margin-left: calc(var(--space-x) * var(--space-2));
    }

    .label + .input {
      margin-top: calc(var(--space-y) * var(--space-1));
      margin-left: calc(var(--space-x) * var(--space-1));
    }

    .image + .full,
    .icon + .full {
      margin-top: calc(var(--space-y) * var(--space-5));
      margin-left: calc(var(--space-x) * var(--space-5));
    }
  }
}
